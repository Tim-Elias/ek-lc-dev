{"ast":null,"code":"const initialState = {\n  text_area: '',\n  text_length: 0,\n  data: [],\n  import_template: [],\n  default_template: [],\n  import_template_list: [],\n  default_template_list: [],\n  disp_template_list: [],\n  disp_data: []\n};\nexport default function dispatch(state = initialState, action) {\n  switch (action.type) {\n    case 'set_text_area':\n      return { ...state,\n        text_area: action.payload\n      };\n\n    case 'upload_manifest_reset_state':\n      return initialState;\n\n    case 'set_import_template':\n      return { ...state,\n        import_template: action.payload\n      };\n\n    case 'set_default_template':\n      return { ...state,\n        default_template: action.payload\n      };\n\n    case 'set_disp_data':\n      return { ...state,\n        disp_data: action.payload\n      };\n\n    case 'set_disp_template_list':\n      return { ...state,\n        disp_template_list: action.payload\n      };\n\n    case 'set_import_template_list':\n      if (action.payload.length === 0) {\n        return { ...state,\n          import_template_list: action.payload\n        };\n      } else {\n        return { ...state,\n          import_template_list: action.payload,\n          import_template: action.payload[0]\n        };\n      }\n\n    case 'set_default_template_list':\n      if (action.payload.length === 0) {\n        return { ...state,\n          default_template_list: action.payload\n        };\n      } else {\n        return { ...state,\n          default_template_list: action.payload,\n          default_template: action.payload[0]\n        };\n      }\n\n    case 'set_data_upload_manifest':\n      const chars = state.text_area.split(String.fromCharCode(10));\n      const data = [];\n      chars.forEach(element => {\n        data.push(element.split(String.fromCharCode(9)));\n      });\n      return { ...state,\n        chars: chars,\n        data: data\n      };\n\n    case 'add_data_upload_manifest':\n      state.data.push(action.payload);\n    // return { ...state, data: state.data};\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/elias/Documents/kinetika/src/reducers/upload_manifest.js"],"names":["initialState","text_area","text_length","data","import_template","default_template","import_template_list","default_template_list","disp_template_list","disp_data","dispatch","state","action","type","payload","length","chars","split","String","fromCharCode","forEach","element","push"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,WAAW,EAAE,CAFM;AAGnBC,EAAAA,IAAI,EAAE,EAHa;AAInBC,EAAAA,eAAe,EAAE,EAJE;AAKnBC,EAAAA,gBAAgB,EAAE,EALC;AAMnBC,EAAAA,oBAAoB,EAAE,EANH;AAOnBC,EAAAA,qBAAqB,EAAE,EAPJ;AAQnBC,EAAAA,kBAAkB,EAAE,EARD;AASnBC,EAAAA,SAAS,EAAC;AATS,CAArB;AAaA,eAAe,SAASC,QAAT,CAAmBC,KAAK,GAAGX,YAA3B,EAAyCY,MAAzC,EAAiD;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AAAsB,aAAO,EAAE,GAAGF,KAAL;AAAYV,QAAAA,SAAS,EAAEW,MAAM,CAACE;AAA9B,OAAP;;AACtB,SAAK,6BAAL;AAAoC,aAAQd,YAAR;;AACpC,SAAK,qBAAL;AAA4B,aAAO,EAAE,GAAGW,KAAL;AAAYP,QAAAA,eAAe,EAAEQ,MAAM,CAACE;AAApC,OAAP;;AAC5B,SAAK,sBAAL;AAA6B,aAAO,EAAE,GAAGH,KAAL;AAAYN,QAAAA,gBAAgB,EAAEO,MAAM,CAACE;AAArC,OAAP;;AAC7B,SAAK,eAAL;AAAsB,aAAO,EAAE,GAAGH,KAAL;AAAYF,QAAAA,SAAS,EAAEG,MAAM,CAACE;AAA9B,OAAP;;AAEtB,SAAK,wBAAL;AAA+B,aAAO,EAAE,GAAGH,KAAL;AAAYH,QAAAA,kBAAkB,EAAEI,MAAM,CAACE;AAAvC,OAAP;;AAE/B,SAAK,0BAAL;AACE,UAAIF,MAAM,CAACE,OAAP,CAAeC,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,eAAO,EAAE,GAAGJ,KAAL;AAAYL,UAAAA,oBAAoB,EAAEM,MAAM,CAACE;AAAzC,SAAP;AACD,OAFD,MAEO;AACL,eAAO,EAAE,GAAGH,KAAL;AAAYL,UAAAA,oBAAoB,EAAEM,MAAM,CAACE,OAAzC;AAAkDV,UAAAA,eAAe,EAAEQ,MAAM,CAACE,OAAP,CAAe,CAAf;AAAnE,SAAP;AACD;;AAEH,SAAK,2BAAL;AACE,UAAIF,MAAM,CAACE,OAAP,CAAeC,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,eAAO,EAAE,GAAGJ,KAAL;AAAYJ,UAAAA,qBAAqB,EAAEK,MAAM,CAACE;AAA1C,SAAP;AACD,OAFD,MAEO;AACL,eAAO,EAAE,GAAGH,KAAL;AAAYJ,UAAAA,qBAAqB,EAAEK,MAAM,CAACE,OAA1C;AAAmDT,UAAAA,gBAAgB,EAAEO,MAAM,CAACE,OAAP,CAAe,CAAf;AAArE,SAAP;AACD;;AAEH,SAAK,0BAAL;AACE,YAAME,KAAK,GAAGL,KAAK,CAACV,SAAN,CAAgBgB,KAAhB,CAAsBC,MAAM,CAACC,YAAP,CAAoB,EAApB,CAAtB,CAAd;AACA,YAAMhB,IAAI,GAAG,EAAb;AACAa,MAAAA,KAAK,CAACI,OAAN,CAAcC,OAAO,IAAI;AACvBlB,QAAAA,IAAI,CAACmB,IAAL,CAAUD,OAAO,CAACJ,KAAR,CAAcC,MAAM,CAACC,YAAP,CAAoB,CAApB,CAAd,CAAV;AACD,OAFD;AAIA,aAAO,EAAE,GAAGR,KAAL;AAAYK,QAAAA,KAAK,EAAEA,KAAnB;AAA0Bb,QAAAA,IAAI,EAAEA;AAAhC,OAAP;;AAEF,SAAK,0BAAL;AACEQ,MAAAA,KAAK,CAACR,IAAN,CAAWmB,IAAX,CAAgBV,MAAM,CAACE,OAAvB;AACA;;AACF;AAAS,aAAOH,KAAP;AAnCX;AAqCD","sourcesContent":["const initialState = {\n  text_area: '',\n  text_length: 0,\n  data: [],\n  import_template: [],\n  default_template: [],\n  import_template_list: [],\n  default_template_list: [],\n  disp_template_list: [],\n  disp_data:[],\n\n}\n\nexport default function dispatch (state = initialState, action) {\n  switch (action.type) {\n    case 'set_text_area': return { ...state, text_area: action.payload }\n    case 'upload_manifest_reset_state': return  initialState \n    case 'set_import_template': return { ...state, import_template: action.payload }\n    case 'set_default_template': return { ...state, default_template: action.payload }\n    case 'set_disp_data': return { ...state, disp_data: action.payload }\n\n    case 'set_disp_template_list': return { ...state, disp_template_list: action.payload }\n\n    case 'set_import_template_list':\n      if (action.payload.length === 0) {\n        return { ...state, import_template_list: action.payload }\n      } else {\n        return { ...state, import_template_list: action.payload, import_template: action.payload[0] }\n      }\n\n    case 'set_default_template_list':\n      if (action.payload.length === 0) {\n        return { ...state, default_template_list: action.payload }\n      } else {\n        return { ...state, default_template_list: action.payload, default_template: action.payload[0] }\n      }\n\n    case 'set_data_upload_manifest':\n      const chars = state.text_area.split(String.fromCharCode(10))\n      const data = []\n      chars.forEach(element => {\n        data.push(element.split(String.fromCharCode(9)))\n      })\n\n      return { ...state, chars: chars, data: data }\n\n    case 'add_data_upload_manifest':\n      state.data.push(action.payload)\n      // return { ...state, data: state.data};\n    default: return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}