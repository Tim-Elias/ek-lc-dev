{"ast":null,"code":"var _jsxFileName = \"/Users/elias/Documents/ek-lc-dev-1/ek-lc-dev/src/m_screen/m_check_print.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { get_data } from '../common/common_modules';\nimport Wait from \"../screen/wait\";\nimport ReactToPrint from 'react-to-print';\nimport QRCode from 'qrcode.react';\n\nclass Screen extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(ReactToPrint, {\n      trigger: () => React.createElement(\"button\", {\n        className: \"mobile_disp_button_item mobile_disp_button_item--blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"\\u041F\\u0435\\u0447\\u0430\\u0442\\u044C \\u0447\\u0435\\u043A\\u0430\"),\n      content: () => this.componentRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: el => this.componentRef = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(QRCode, {\n      value: this.props.store.check.check_data.qr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }))), this.props.store.check.check_data.qr, this.props.store.check.check_data.date, this.props.store.check.check_data.summ, this.props.store.check.check_data.fpd);\n  }\n\n}\n\n;\nexport default connect(state => ({\n  store: state\n}), dispatch => ({\n  set_active_loader: param => {\n    dispatch({\n      type: 'set_active_loader',\n      payload: param\n    });\n  },\n  set_date_start: param => {\n    dispatch({\n      type: 'set_date_start',\n      payload: param\n    });\n  },\n  set_date_end: param => {\n    dispatch({\n      type: 'set_date_end',\n      payload: param\n    });\n  },\n  set_profit_for_period: param => {\n    dispatch({\n      type: 'set_profit_for_period',\n      payload: param\n    });\n  },\n  set_disp_list: param => {\n    dispatch({\n      type: 'set_disp_list',\n      payload: param\n    });\n  }\n}))(Screen);","map":{"version":3,"sources":["/Users/elias/Documents/ek-lc-dev-1/ek-lc-dev/src/m_screen/m_check_print.js"],"names":["React","connect","get_data","Wait","ReactToPrint","QRCode","Screen","Component","render","componentRef","display","el","props","store","check","check_data","qr","date","summ","fpd","state","dispatch","set_active_loader","param","type","payload","set_date_start","set_date_end","set_profit_for_period","set_disp_list"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAGA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAqC;AAGjCC,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AACI,MAAA,OAAO,EAAE,MAAM;AAAQ,QAAA,SAAS,EAAC,uDAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEADnB;AAEI,MAAA,OAAO,EAAE,MAAM,KAAKC,YAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEC,EAAE,IAAK,KAAKF,YAAL,GAAoBE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,KAAjB,CAAuBC,UAAvB,CAAkCC,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CALJ,EAWK,KAAKJ,KAAL,CAAWC,KAAX,CAAiBC,KAAjB,CAAuBC,UAAvB,CAAkCC,EAXvC,EAYK,KAAKJ,KAAL,CAAWC,KAAX,CAAiBC,KAAjB,CAAuBC,UAAvB,CAAkCE,IAZvC,EAaK,KAAKL,KAAL,CAAWC,KAAX,CAAiBC,KAAjB,CAAuBC,UAAvB,CAAkCG,IAbvC,EAcK,KAAKN,KAAL,CAAWC,KAAX,CAAiBC,KAAjB,CAAuBC,UAAvB,CAAkCI,GAdvC,CADJ;AAmBH;;AAxBgC;;AA0BpC;AAED,eAAelB,OAAO,CAClBmB,KAAK,KAAK;AACNP,EAAAA,KAAK,EAAEO;AADD,CAAL,CADa,EAIlBC,QAAQ,KAAK;AACTC,EAAAA,iBAAiB,EAAGC,KAAD,IAAW;AAAEF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,mBAAR;AAA6BC,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AAA0D,GADjF;AAETG,EAAAA,cAAc,EAAGH,KAAD,IAAW;AAAEF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,OAAO,EAAEF;AAAnC,KAAD,CAAR;AAAsD,GAF1E;AAGTI,EAAAA,YAAY,EAAGJ,KAAD,IAAW;AAAEF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,cAAR;AAAwBC,MAAAA,OAAO,EAAEF;AAAjC,KAAD,CAAR;AAAoD,GAHtE;AAITK,EAAAA,qBAAqB,EAAGL,KAAD,IAAW;AAAEF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,uBAAR;AAAiCC,MAAAA,OAAO,EAAEF;AAA1C,KAAD,CAAR;AAA6D,GAJxF;AAKTM,EAAAA,aAAa,EAAGN,KAAD,IAAW;AAAEF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,eAAR;AAAyBC,MAAAA,OAAO,EAAEF;AAAlC,KAAD,CAAR;AAAqD;AALxE,CAAL,CAJU,CAAP,CAYbjB,MAZa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { get_data } from '../common/common_modules';\nimport Wait from \"../screen/wait\";\nimport ReactToPrint from 'react-to-print'\nimport QRCode from 'qrcode.react';\n\n\nclass Screen extends React.Component {\n\n\n    render() {\n\n        return (\n            <div>\n                <ReactToPrint\n                    trigger={() => <button className=\"mobile_disp_button_item mobile_disp_button_item--blue\">Печать чека</button>}\n                    content={() => this.componentRef}\n                />\n                <div style={{ display: \"none\" }}>\n                    <div ref={el => (this.componentRef = el)}>   \n                        <QRCode value={this.props.store.check.check_data.qr} />\n                    </div>\n                </div>\n\n                {this.props.store.check.check_data.qr}\n                {this.props.store.check.check_data.date}\n                {this.props.store.check.check_data.summ}\n                {this.props.store.check.check_data.fpd}\n                \n            </div>\n        )\n    }\n\n};\n\nexport default connect(\n    state => ({\n        store: state\n    }),\n    dispatch => ({\n        set_active_loader: (param) => { dispatch({ type: 'set_active_loader', payload: param }); },\n        set_date_start: (param) => { dispatch({ type: 'set_date_start', payload: param }) },\n        set_date_end: (param) => { dispatch({ type: 'set_date_end', payload: param }) },\n        set_profit_for_period: (param) => { dispatch({ type: 'set_profit_for_period', payload: param }) }, \n        set_disp_list: (param) => { dispatch({ type: 'set_disp_list', payload: param }) }, \n    })\n\n)(Screen);"]},"metadata":{},"sourceType":"module"}