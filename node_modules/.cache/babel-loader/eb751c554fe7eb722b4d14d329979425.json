{"ast":null,"code":"const today = new Date();\nlet mm = today.getMonth() + 1; // getMonth() is zero-based\n\nlet dd = today.getDate();\nconst y = today.getFullYear();\n\nif (mm < 10) {\n  mm = '0' + mm;\n}\n\nif (dd < 10) {\n  dd = '0' + dd;\n}\n\nconst date = y + '-' + mm + '-' + dd;\nconst initialState = {\n  Price: '0',\n  CityList: [],\n  CargoInfoType: {\n    label: 'Внести информацию о каждом грузе',\n    value: false\n  },\n  PayType: {\n    label: 'Безналичная оплата',\n    value: 'Безналичная оплата'\n  },\n  PayerSelect: {},\n  PayerList: [],\n  Payer: {\n    name: '',\n    id: ''\n  },\n  DelMethod: 'Дверь - Дверь',\n  CustomerEmailInformer: false,\n  Number: 0,\n  OpenModalSendTemplate: false,\n  OpenModalRecTemplate: false,\n  FilterModalSendTemplate: \"\",\n  FilterModalRecTemplate: \"\",\n  SendTerminalList: [],\n  RecTerminalList: [],\n  SelectedSendCity: null,\n  SelectedRecCity: null,\n  SendCity: '',\n  SendAdress: '',\n  SendCompany: '',\n  SendPhone: '',\n  SendPerson: '',\n  SendAddInfo: '',\n  SendEmail: '',\n  SendTerminal: false,\n  SendSelectTerminal: {},\n  SendEmailInformer: false,\n  RecCity: '',\n  RecAdress: '',\n  RecCompany: '',\n  RecPhone: '',\n  RecPerson: '',\n  RecAddInfo: '',\n  RecEmail: '',\n  RecTerminal: false,\n  RecSelectTerminal: {},\n  RecEmailInformer: false,\n  Cargo: [{\n    Weight: 0,\n    L: 0,\n    W: 0,\n    H: 0,\n    Q: 1,\n    CargoType: 0,\n    Comment: ''\n  }],\n  Total: 0,\n  Weight: 0,\n  Volume: 0,\n  COD: 0,\n  InsureValue: 0,\n  Termo: '',\n  IRR: false,\n  Fragile: false,\n  DelType: '',\n  DispDate: date\n};\nexport default function dispatch(state = initialState, action) {\n  switch (action.type) {\n    case 'reset_create_disp_data':\n      return initialState;\n\n    case 'SetPayerSelect':\n      return { ...state,\n        PayerSelect: action.payload\n      };\n\n    case 'SetPrice':\n      return { ...state,\n        Price: action.payload\n      };\n\n    case 'SetDelMethod':\n      return { ...state,\n        DelMethod: action.payload\n      };\n\n    case 'SetPayerList':\n      return { ...state,\n        PayerList: action.payload\n      };\n\n    case 'SetPayer':\n      return { ...state,\n        Payer: action.payload\n      };\n\n    case 'SetCOD':\n      return { ...state,\n        COD: action.payload\n      };\n\n    case 'SetInsureValue':\n      return { ...state,\n        InsureValue: action.payload\n      };\n\n    case 'SetOpenModalRecTemplate':\n      return { ...state,\n        OpenModalRecTemplate: action.payload\n      };\n\n    case 'SetOpenModalSendTemplate':\n      return { ...state,\n        OpenModalSendTemplate: action.payload\n      };\n\n    case 'SetFilterModalSendTemplate':\n      return { ...state,\n        FilterModalSendTemplate: action.payload\n      };\n\n    case 'SetFilterModalRecTemplate':\n      return { ...state,\n        FilterModalRecTemplate: action.payload\n      };\n\n    case 'SetSelectedSendCity':\n      return { ...state,\n        SelectedSendCity: action.payload\n      };\n\n    case 'SetSelectedRecCity':\n      return { ...state,\n        SelectedRecCity: action.payload\n      };\n\n    case 'SetPayType':\n      return { ...state,\n        PayType: action.payload\n      };\n\n    case 'SetSendCity':\n      return { ...state,\n        SendCity: action.payload\n      };\n\n    case 'SetSendAdress':\n      return { ...state,\n        SendAdress: action.payload\n      };\n\n    case 'SetSendCompany':\n      return { ...state,\n        SendCompany: action.payload\n      };\n\n    case 'SetSendPhone':\n      return { ...state,\n        SendPhone: action.payload\n      };\n\n    case 'SetSendPerson':\n      return { ...state,\n        SendPerson: action.payload\n      };\n\n    case 'SetSendAddInfo':\n      return { ...state,\n        SendAddInfo: action.payload\n      };\n\n    case 'SetSendEmail':\n      return { ...state,\n        SendEmail: action.payload\n      };\n\n    case 'SetSendTerminal':\n      return { ...state,\n        SendTerminal: action.payload.SendTerminal,\n        DelMethod: action.payload.DelMethod\n      };\n\n    case 'SetSendEmailInformer':\n      return { ...state,\n        SendEmailInformer: action.payload\n      };\n\n    case 'SetRecCity':\n      return { ...state,\n        RecCity: action.payload\n      };\n\n    case 'SetRecAdress':\n      return { ...state,\n        RecAdress: action.payload\n      };\n\n    case 'SetRecCompany':\n      return { ...state,\n        RecCompany: action.payload\n      };\n\n    case 'SetRecPhone':\n      return { ...state,\n        RecPhone: action.payload\n      };\n\n    case 'SetRecPerson':\n      return { ...state,\n        RecPerson: action.payload\n      };\n\n    case 'SetRecAddInfo':\n      return { ...state,\n        RecAddInfo: action.payload\n      };\n\n    case 'SetRecEmail':\n      return { ...state,\n        RecEmail: action.payload\n      };\n\n    case 'SetRecTerminal':\n      return { ...state,\n        RecTerminal: action.payload.RecTerminal,\n        DelMethod: action.payload.DelMethod\n      };\n\n    case 'SetRecEmailInformer':\n      return { ...state,\n        RecEmailInformer: action.payload\n      };\n\n    case 'SetRecTerminalList':\n      if (action.payload.length == 0) {\n        return { ...state,\n          RecTerminalList: action.payload\n        };\n      } else {\n        return { ...state,\n          RecTerminalList: action.payload,\n          RecSelectTerminal: action.payload[0]\n        };\n      }\n\n      ;\n\n    case 'SetSendTerminalList':\n      if (action.payload.length == 0) {\n        return { ...state,\n          SendTerminalList: action.payload\n        };\n      } else {\n        return { ...state,\n          SendTerminalList: action.payload,\n          SendSelectTerminal: action.payload[0]\n        };\n      }\n\n      ;\n    // cargo\n\n    case 'SetCargoWeight':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              Weight: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoW':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              W: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoL':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              L: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoH':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              H: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoQ':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              Q: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoComment':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              Comment: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoType':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              Type: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'RemoveCargo':\n      return { ...state,\n        Cargo: state.Cargo.filter((el, index) => {\n          return index !== action.payload;\n        })\n      };\n\n    case 'AddCargo':\n      state.Cargo.push({\n        Weight: 0,\n        L: 0,\n        W: 0,\n        H: 0,\n        Q: 1,\n        CargoType: 0,\n        Comment: ''\n      });\n      return { ...state,\n        Cargo: state.Cargo\n      };\n\n    case 'SetCargoInfoType':\n      return { ...state,\n        CargoInfoType: action.payload\n      };\n\n    case 'SetDispDate':\n      return { ...state,\n        DispDate: action.payload\n      };\n\n    case 'SetTotal':\n      return { ...state,\n        Total: action.payload\n      };\n\n    case 'SetWeight':\n      return { ...state,\n        Weight: action.payload\n      };\n\n    case 'SetVolume':\n      return { ...state,\n        Volume: action.payload\n      };\n\n    case 'SetTermo':\n      return { ...state,\n        PayType: action.payload\n      };\n\n    case 'SetIRR':\n      return { ...state,\n        PayType: action.payload\n      };\n\n    case 'SetFragile':\n      return { ...state,\n        PayType: action.payload\n      };\n\n    case 'SetDelType':\n      return { ...state,\n        PayType: action.payload\n      };\n\n    case 'SetCustomerEmailInformer':\n      return { ...state,\n        CustomerEmailInformer: action.payload\n      };\n\n    case 'SetCityList':\n      return { ...state,\n        CityList: action.payload\n      };\n\n    case 'SetSendSelectTerminal':\n      return { ...state,\n        SendSelectTerminal: action.payload\n      };\n\n    case 'SetRecSelectTerminal':\n      return { ...state,\n        RecSelectTerminal: action.payload\n      };\n\n    case 'set_copy_disp_data':\n      const CargoTypeList = [{\n        label: \"Сейф-пакет\",\n        value: \"СейфПакет\"\n      }, {\n        label: \"Коробка\",\n        value: \"Коробка\"\n      }, {\n        label: \"Контейнер\",\n        value: \"Контейнер\"\n      }, {\n        label: \"Мешок под пломбой\",\n        value: \"МешокПодПломбой\"\n      }, {\n        label: \"Прочее\",\n        value: \"Прочее\"\n      }];\n      console.log(action.payload.Cargo);\n      return { ...state,\n        PayerSelect: action.payload.PayerSelect,\n        Number: action.payload.Number,\n        PayType: action.payload.PayType,\n        SendAdress: action.payload.SendAdress,\n        SendCompany: action.payload.SendCompany,\n        SendPhone: action.payload.SendPhone,\n        SendPerson: action.payload.SendPerson,\n        SendAddInfo: action.payload.SendAddInfo,\n        SendEmail: action.payload.SendEmail,\n        SendTerminal: action.payload.SendTerminal,\n        // SendSelectTerminal: {},\n        InsureValue: action.payload.InsureValue,\n        COD: action.payload.COD,\n        RecAdress: action.payload.RecAdress,\n        RecCompany: action.payload.RecCompany,\n        RecPhone: action.payload.RecPhone,\n        RecPerson: action.payload.RecPerson,\n        RecAddInfo: action.payload.RecAddInfo,\n        RecEmail: action.payload.RecEmail,\n        RecTerminal: action.payload.RecTerminal,\n        // RecSelectTerminal: {},\n        CargoInfoType: action.payload.CargoInfoType,\n        Volume: action.payload.Volume,\n        Total: action.payload.Total,\n        Weight: action.payload.Weight,\n        Cargo: action.payload.Cargo.map(el => {\n          const cargo_type = el.Type;\n          const CargoTypeListEl = CargoTypeList.find(el_list => el_list.value === el.Type);\n          console.log(cargo_type);\n          console.log(CargoTypeListEl);\n          return {\n            Weight: el.Weight,\n            L: el.L,\n            W: el.W,\n            H: el.H,\n            Q: el.Q,\n            Type: CargoTypeList.find(el_list => el_list.label === el.Type),\n            Comment: el.Comment\n          };\n        })\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/saint/ek 3.1/ek-lc-dev/src/reducers/create_disp.js"],"names":["today","Date","mm","getMonth","dd","getDate","y","getFullYear","date","initialState","Price","CityList","CargoInfoType","label","value","PayType","PayerSelect","PayerList","Payer","name","id","DelMethod","CustomerEmailInformer","Number","OpenModalSendTemplate","OpenModalRecTemplate","FilterModalSendTemplate","FilterModalRecTemplate","SendTerminalList","RecTerminalList","SelectedSendCity","SelectedRecCity","SendCity","SendAdress","SendCompany","SendPhone","SendPerson","SendAddInfo","SendEmail","SendTerminal","SendSelectTerminal","SendEmailInformer","RecCity","RecAdress","RecCompany","RecPhone","RecPerson","RecAddInfo","RecEmail","RecTerminal","RecSelectTerminal","RecEmailInformer","Cargo","Weight","L","W","H","Q","CargoType","Comment","Total","Volume","COD","InsureValue","Termo","IRR","Fragile","DelType","DispDate","dispatch","state","action","type","payload","length","map","el","index","Type","filter","push","CargoTypeList","console","log","cargo_type","CargoTypeListEl","find","el_list"],"mappings":"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","sourcesContent":["const today = new Date()\n  let mm = today.getMonth() + 1; // getMonth() is zero-based\n  let dd = today.getDate();\n\n  const y = today.getFullYear()\n\n  if (mm<10) { mm = '0' + mm }\n  if (dd<10) {dd = '0' + dd}\n        \n  const date = y+'-'+mm+'-'+dd\n\n\nconst initialState = {\n\n  Price: '0',\n\n  CityList: [],\n  CargoInfoType: { label: 'Внести информацию о каждом грузе', value: false },\n  PayType: { label: 'Безналичная оплата', value: 'Безналичная оплата' },\n  PayerSelect: {},\n  PayerList: [],\n  Payer: {name:'', id:''},\n  DelMethod: 'Дверь - Дверь',\n  CustomerEmailInformer: false,\n\n  Number: 0,\n\n  OpenModalSendTemplate: false,\n  OpenModalRecTemplate: false,\n\n  FilterModalSendTemplate: \"\", \n  FilterModalRecTemplate: \"\",\n  \n  SendTerminalList: [],\n  RecTerminalList: [],\n\n  SelectedSendCity: null,\n  SelectedRecCity: null,\n\n  SendCity: '',\n  SendAdress: '',\n  SendCompany: '',\n  SendPhone: '',\n  SendPerson: '',\n  SendAddInfo: '',\n  SendEmail: '',\n  SendTerminal: false,\n  SendSelectTerminal: {},\n  SendEmailInformer: false,\n\n  RecCity: '',\n  RecAdress: '',\n  RecCompany: '',\n  RecPhone: '',\n  RecPerson: '',\n  RecAddInfo: '',\n  RecEmail: '',\n  RecTerminal: false,\n  RecSelectTerminal: {},\n  RecEmailInformer: false,\n\n  Cargo: [{\n\n    Weight: 0,\n    L: 0,\n    W: 0,\n    H: 0,\n\n    Q: 1,\n\n    CargoType: 0,\n    Comment: ''\n  }],\n  Total: 0,\n  Weight: 0,\n  Volume: 0,\n  COD: 0,\n  InsureValue: 0,\n\n\n  Termo: '',\n\n  IRR: false,\n  Fragile: false,\n  DelType: '',\n  DispDate: date\n\n}\n\nexport default function dispatch (state = initialState, action) {\n  switch (action.type) {\n    \n    case 'reset_create_disp_data': return  initialState \n\n    case 'SetPayerSelect': return { ...state, PayerSelect: action.payload }\n\n    case 'SetPrice': return { ...state, Price: action.payload }\n\n    case 'SetDelMethod': return { ...state, DelMethod: action.payload }\n\n    case 'SetPayerList': return { ...state, PayerList: action.payload }\n\n    case 'SetPayer': return { ...state, Payer: action.payload }\n\n    case 'SetCOD': return { ...state, COD: action.payload }\n    case 'SetInsureValue': return { ...state, InsureValue: action.payload }\n\n    case 'SetOpenModalRecTemplate': return { ...state, OpenModalRecTemplate: action.payload }\n    case 'SetOpenModalSendTemplate': return { ...state, OpenModalSendTemplate: action.payload }\n    \n    case 'SetFilterModalSendTemplate': return { ...state, FilterModalSendTemplate: action.payload }\n    case 'SetFilterModalRecTemplate': return { ...state, FilterModalRecTemplate: action.payload }\n\n    case 'SetSelectedSendCity': return { ...state, SelectedSendCity: action.payload }\n    case 'SetSelectedRecCity': return { ...state, SelectedRecCity: action.payload }\n\n    case 'SetPayType': return { ...state, PayType: action.payload }\n    case 'SetSendCity': return { ...state, SendCity: action.payload }\n    case 'SetSendAdress': return { ...state, SendAdress: action.payload }\n    case 'SetSendCompany': return { ...state, SendCompany: action.payload }\n    case 'SetSendPhone': return { ...state, SendPhone: action.payload }\n    case 'SetSendPerson': return { ...state, SendPerson: action.payload }\n    case 'SetSendAddInfo': return { ...state, SendAddInfo: action.payload }\n    case 'SetSendEmail': return { ...state, SendEmail: action.payload }\n    case 'SetSendTerminal': return { ...state, SendTerminal: action.payload.SendTerminal, DelMethod: action.payload.DelMethod }\n    case 'SetSendEmailInformer': return { ...state, SendEmailInformer: action.payload }\n\n    case 'SetRecCity': return { ...state, RecCity: action.payload }\n    case 'SetRecAdress': return { ...state, RecAdress: action.payload }\n    case 'SetRecCompany': return { ...state, RecCompany: action.payload }\n    case 'SetRecPhone': return { ...state, RecPhone: action.payload }\n    case 'SetRecPerson': return { ...state, RecPerson: action.payload }\n    case 'SetRecAddInfo': return { ...state, RecAddInfo: action.payload }\n    case 'SetRecEmail': return { ...state, RecEmail: action.payload }\n    case 'SetRecTerminal': return { ...state, RecTerminal: action.payload.RecTerminal, DelMethod: action.payload.DelMethod }\n    case 'SetRecEmailInformer': return { ...state, RecEmailInformer: action.payload }\n\n    case 'SetRecTerminalList': if (action.payload.length == 0) {\n      return { ...state, RecTerminalList: action.payload }\n    } else {\n      return { ...state, RecTerminalList: action.payload, RecSelectTerminal: action.payload[0] }\n    };\n\n    case 'SetSendTerminalList': if (action.payload.length == 0) {\n      return { ...state, SendTerminalList: action.payload }\n    } else {\n      return { ...state, SendTerminalList: action.payload, SendSelectTerminal: action.payload[0] }\n    };\n\n      // cargo\n\n    case 'SetCargoWeight': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, Weight: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'SetCargoW': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, W: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'SetCargoL': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, L: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'SetCargoH': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, H: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'SetCargoQ': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, Q: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'SetCargoComment': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, Comment: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'SetCargoType': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, Type: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'RemoveCargo': return {\n      ...state,\n      Cargo: state.Cargo.filter((el, index) => {\n        return index !== action.payload\n      })\n    }\n\n    case 'AddCargo':\n\n      state.Cargo.push({\n\n        Weight: 0,\n        L: 0,\n        W: 0,\n        H: 0,\n\n        Q: 1,\n\n        CargoType: 0,\n        Comment: ''\n      })\n\n      return { ...state, Cargo: state.Cargo }\n\n    case 'SetCargoInfoType': return { ...state, CargoInfoType: action.payload }\n    case 'SetDispDate': return { ...state, DispDate: action.payload }\n    case 'SetTotal': return { ...state, Total: action.payload }\n    case 'SetWeight': return { ...state, Weight: action.payload }\n    case 'SetVolume': return { ...state, Volume: action.payload }\n\n    case 'SetTermo': return { ...state, PayType: action.payload }\n    case 'SetIRR': return { ...state, PayType: action.payload }\n    case 'SetFragile': return { ...state, PayType: action.payload }\n    case 'SetDelType': return { ...state, PayType: action.payload }\n\n    case 'SetCustomerEmailInformer': return { ...state, CustomerEmailInformer: action.payload }\n\n    case 'SetCityList': return { ...state, CityList: action.payload }\n    case 'SetSendSelectTerminal': return { ...state, SendSelectTerminal: action.payload }\n    case 'SetRecSelectTerminal': return { ...state, RecSelectTerminal: action.payload }\n\n    case 'set_copy_disp_data': \n    \n    const CargoTypeList = [\n      {label:\"Сейф-пакет\", value: \"СейфПакет\"},\n      {label:\"Коробка\", value: \"Коробка\"},\n      {label:\"Контейнер\", value: \"Контейнер\"},\n      {label:\"Мешок под пломбой\", value: \"МешокПодПломбой\"},\n      {label:\"Прочее\", value: \"Прочее\"}\n    ]\n    console.log(action.payload.Cargo)\n\n\n    return { ...state, \n      PayerSelect: action.payload.PayerSelect,\n      Number: action.payload.Number,\n      PayType: action.payload.PayType,\n      SendAdress: action.payload.SendAdress,\n      SendCompany: action.payload.SendCompany,\n      SendPhone: action.payload.SendPhone,\n      SendPerson: action.payload.SendPerson,\n      SendAddInfo: action.payload.SendAddInfo,\n      SendEmail: action.payload.SendEmail,\n      \n      SendTerminal: action.payload.SendTerminal,\n      // SendSelectTerminal: {},\n      \n      InsureValue: action.payload.InsureValue,\n      COD: action.payload.COD,\n      RecAdress: action.payload.RecAdress,\n      RecCompany: action.payload.RecCompany,\n      RecPhone: action.payload.RecPhone,\n      RecPerson: action.payload. RecPerson,\n      RecAddInfo: action.payload.RecAddInfo,\n      RecEmail: action.payload.RecEmail,\n      \n      RecTerminal: action.payload.RecTerminal,\n      // RecSelectTerminal: {},\n\n      CargoInfoType: action.payload.CargoInfoType,\n\n      Volume: action.payload.Volume, \n      Total: action.payload.Total,\n      Weight: action.payload.Weight,\n      \n      Cargo: action.payload.Cargo.map(el=>{\n        const cargo_type = el.Type\n        const CargoTypeListEl = CargoTypeList.find(el_list => el_list.value === el.Type)\n        console.log(cargo_type)\n        console.log(CargoTypeListEl)\n        return {\n        Weight: el.Weight,\n        L: el.L,\n        W: el.W,\n        H: el.H,\n        Q: el.Q,\n        Type: CargoTypeList.find(el_list => el_list.label === el.Type),\n        Comment: el.Comment\n      }}),\n    }\n\n    default: return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}