{"ast":null,"code":"var _jsxFileName = \"/home/saint/ek 3.1/ek-lc-dev/src/m_screen/scanner.js\";\nimport React, { Component } from 'react';\nimport QrReader from 'react-qr-reader';\nimport { connect } from 'react-redux';\n\nclass Screen extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleScan = data => {\n      if (data) {\n        this.props.set_search_reciept(data);\n        this.props.set_search_storagre(data);\n        this.props.set_scann_active(false);\n      }\n    };\n\n    this.handleError = err => {\n      console.error(err);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scanner_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(QrReader, {\n      delay: 100,\n      onError: this.handleError,\n      onScan: this.handleScan,\n      style: {\n        width: '100%',\n        margin: \" 0 0 10px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"scanner_close\",\n      onClick: e => this.props.set_scann_active(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  store: state\n}), dispatch => ({\n  set_scann_active: param => {\n    dispatch({\n      type: 'set_scann_active',\n      payload: param\n    });\n  },\n  set_search_storagre: param => {\n    dispatch({\n      type: 'set_search_storagre',\n      payload: param\n    });\n  },\n  set_search_reciept: param => {\n    dispatch({\n      type: 'set_search_reciept',\n      payload: param\n    });\n  }\n}))(Screen);","map":{"version":3,"sources":["/home/saint/ek 3.1/ek-lc-dev/src/m_screen/scanner.js"],"names":["React","Component","QrReader","connect","Screen","handleScan","data","props","set_search_reciept","set_search_storagre","set_scann_active","handleError","err","console","error","render","width","margin","e","state","store","dispatch","param","type","payload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAE3BI,UAF2B,GAEdC,IAAI,IAAI;AACjB,UAAIA,IAAJ,EAAU;AACN,aAAKC,KAAL,CAAWC,kBAAX,CAA8BF,IAA9B;AACA,aAAKC,KAAL,CAAWE,mBAAX,CAA+BH,IAA/B;AACA,aAAKC,KAAL,CAAWG,gBAAX,CAA4B,KAA5B;AACH;AACJ,KAR0B;;AAAA,SAU3BC,WAV2B,GAUbC,GAAG,IAAI;AACjBC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,KAZ0B;AAAA;;AAc3BG,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAE,GADX;AAEI,MAAA,OAAO,EAAE,KAAKJ,WAFlB;AAGI,MAAA,MAAM,EAAE,KAAKN,UAHjB;AAII,MAAA,KAAK,EAAE;AAAEW,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAOI;AAAG,MAAA,SAAS,EAAC,eAAb;AAA6B,MAAA,OAAO,EAAEC,CAAC,IAAI,KAAKX,KAAL,CAAWG,gBAAX,CAA4B,KAA5B,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ;AAWH;;AA3B0B;;AA+B/B,eAAeP,OAAO,CACjBgB,KAAD,KAAY;AAAEC,EAAAA,KAAK,EAAED;AAAT,CAAZ,CADkB,EAElBE,QAAQ,KAAK;AACTX,EAAAA,gBAAgB,EAAGY,KAAD,IAAW;AAAED,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,kBAAR;AAA4BC,MAAAA,OAAO,EAAEF;AAArC,KAAD,CAAR;AAAwD,GAD9E;AAETb,EAAAA,mBAAmB,EAAGa,KAAD,IAAW;AAAED,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,qBAAR;AAA+BC,MAAAA,OAAO,EAAEF;AAAxC,KAAD,CAAR;AAA2D,GAFpF;AAGTd,EAAAA,kBAAkB,EAAGc,KAAD,IAAW;AAAED,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,oBAAR;AAA8BC,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AAA0D;AAHlF,CAAL,CAFU,CAAP,CAOblB,MAPa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport QrReader from 'react-qr-reader';\nimport { connect } from 'react-redux';\n\nclass Screen extends Component {\n    \n    handleScan = data => {\n        if (data) {\n            this.props.set_search_reciept(data);\n            this.props.set_search_storagre(data);\n            this.props.set_scann_active(false);\n        }\n    }\n    \n    handleError = err => {\n        console.error(err)\n    }\n\n    render() {\n        \n        return (\n            <div className=\"scanner_container\">\n                <QrReader\n                    delay={100}\n                    onError={this.handleError}\n                    onScan={this.handleScan}\n                    style={{ width: '100%', margin: \" 0 0 10px 0\" }}\n                />\n                <a className=\"scanner_close\" onClick={e => this.props.set_scann_active(false)}></a>\n            </div>\n        )\n    }\n}\n\n\nexport default connect(\n    (state) => ({ store: state }),\n    dispatch => ({\n        set_scann_active: (param) => { dispatch({ type: 'set_scann_active', payload: param }) },\n        set_search_storagre: (param) => { dispatch({ type: 'set_search_storagre', payload: param }) },\n        set_search_reciept: (param) => { dispatch({ type: 'set_search_reciept', payload: param }) },\n    })\n)(Screen);"]},"metadata":{},"sourceType":"module"}