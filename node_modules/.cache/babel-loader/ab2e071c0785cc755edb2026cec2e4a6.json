{"ast":null,"code":"const initialState = {\n  text_area: '',\n  text_length: 0,\n  data: [],\n  import_template: [],\n  default_template: [],\n  import_template_list: [],\n  default_template_list: [],\n  disp_template_list: [],\n  disp_data: [],\n  upload_in_one: {\n    label: \"Загрузка каждой накладной\",\n    value: false\n  },\n  consolidate_checkbox_index: 0,\n  open_modal_dt: false\n};\nexport default function dispatch(state = initialState, action) {\n  switch (action.type) {\n    case 'set_upload_manifest_disp_data_total':\n      return { ...state,\n        disp_data: [...state.disp_data.map(el => {\n          if (el.Key === action.payload.key) {\n            return { ...el,\n              Total: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })]\n      };\n\n    case 'set_upload_manifest_disp_data_weight':\n      return { ...state,\n        disp_data: [...state.disp_data.map(el => {\n          if (el.Key === action.payload.key) {\n            return { ...el,\n              Weight: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })]\n      };\n\n    case 'set_upload_manifest_disp_data_volume':\n      return { ...state,\n        disp_data: [...state.disp_data.map(el => {\n          if (el.Key === action.payload.key) {\n            return { ...el,\n              Volume: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })]\n      };\n\n    case 'reset_upload_manifest_data':\n      return initialState;\n\n    case 'set_consolidate_checkbox_index':\n      return { ...state,\n        consolidate_checkbox_index: action.payload\n      };\n\n    case 'set_text_area':\n      return { ...state,\n        text_area: action.payload\n      };\n\n    case 'set_upload_in_one':\n      return { ...state,\n        upload_in_one: action.payload,\n        data: [],\n        disp_data: []\n      };\n\n    case 'upload_manifest_reset_state':\n      return initialState;\n\n    case 'set_import_template':\n      return { ...state,\n        import_template: action.payload\n      };\n\n    case 'set_upload_manifest_open_modal_dt':\n      return { ...state,\n        open_modal_dt: action.payload\n      };\n\n    case 'set_default_template':\n      return { ...state,\n        default_template: action.payload\n      };\n\n    case 'set_disp_data':\n      return { ...state,\n        disp_data: [...state.disp_data.concat(action.payload)]\n      };\n\n    case 'upload_manifest_check_template_checkbox':\n      return { ...state,\n        disp_template_list: [...state.disp_template_list.map(el => {\n          if (el.Key === action.payload) {\n            return { ...el,\n              selected: !el.selected\n            };\n          } else {\n            return el;\n          }\n        })]\n      };\n\n    case 'upload_manifest_reset_template_checkbox':\n      return { ...state,\n        disp_template_list: [...state.disp_template_list.map(el => {\n          return { ...el,\n            selected: false\n          };\n        })]\n      };\n\n    case 'upload_manifest_remove_disp':\n      return { ...state,\n        disp_data: state.disp_data.filter(el => el.Key !== action.payload)\n      };\n\n    case 'upload_manifest_check_checkbox':\n      return { ...state,\n        data: state.data.map((el, index) => {\n          if (index === action.payload.element_index) {\n            return el.map((cell, cell_index) => {\n              if (cell_index === action.payload.cell_index) {\n                return !cell;\n              } else {\n                return cell;\n              }\n            });\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'set_disp_status':\n      return { ...state,\n        disp_data: state.disp_data.map((el, index) => {\n          if (el.Key === action.payload.Key) {\n            return { ...el,\n              Status: action.payload.Status,\n              Num: action.payload.Num,\n              print_data: {\n                data: action.payload.print_data[0],\n                cargo: action.payload.print_data[1]\n              }\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'set_disp_template_list':\n      return { ...state,\n        disp_template_list: action.payload\n      };\n\n    case 'set_import_template_list':\n      if (action.payload.length === 0) {\n        return { ...state,\n          import_template_list: action.payload\n        };\n      } else {\n        return { ...state,\n          import_template_list: action.payload,\n          import_template: action.payload[0]\n        };\n      }\n\n    case 'set_default_template_list':\n      if (action.payload.length === 0) {\n        return { ...state,\n          default_template_list: action.payload\n        };\n      } else {\n        return { ...state,\n          default_template_list: action.payload,\n          default_template: action.payload[0]\n        };\n      }\n\n    case 'set_data_upload_manifest':\n      const chars = state.text_area.split(String.fromCharCode(10));\n      const data = [];\n      let consolidate_checkbox_index = 0;\n      chars.forEach(element => {\n        let el = element.split(String.fromCharCode(9));\n\n        if (state.upload_in_one.value) {\n          el.push(false);\n          consolidate_checkbox_index = el.length - 1;\n        }\n\n        data.push(el); // data.push(false)\n      });\n      return { ...state,\n        chars: chars,\n        data: data,\n        consolidate_checkbox_index: consolidate_checkbox_index\n      };\n\n    case 'add_data_upload_manifest':\n      state.data.push(action.payload);\n    // return { ...state, data: state.data};\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/saint/123/ek-lc-dev/src/reducers/upload_manifest.js"],"names":["initialState","text_area","text_length","data","import_template","default_template","import_template_list","default_template_list","disp_template_list","disp_data","upload_in_one","label","value","consolidate_checkbox_index","open_modal_dt","dispatch","state","action","type","map","el","Key","payload","key","Total","Weight","Volume","concat","selected","filter","index","element_index","cell","cell_index","Status","Num","print_data","cargo","length","chars","split","String","fromCharCode","forEach","element","push"],"mappings":"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","sourcesContent":["const initialState = {\n  text_area: '',\n  text_length: 0,\n  data: [],\n  import_template: [],\n  default_template: [],\n  import_template_list: [],\n  default_template_list: [],\n  disp_template_list: [],\n  disp_data:[],\n  upload_in_one: {label:\"Загрузка каждой накладной\", value: false },\n  consolidate_checkbox_index: 0,\n\n  open_modal_dt: false,\n\n}\n\nexport default function dispatch (state = initialState, action) {\n  switch (action.type) {\n\n    case 'set_upload_manifest_disp_data_total': return { ...state, disp_data: [...state.disp_data.map((el) => { if (el.Key === action.payload.key) { return { ...el, Total: action.payload.value } } else { return el} }) ]  }\n    case 'set_upload_manifest_disp_data_weight': return { ...state, disp_data: [...state.disp_data.map((el) => { if (el.Key === action.payload.key) { return { ...el, Weight: action.payload.value } } else { return el} }) ]  }\n    case 'set_upload_manifest_disp_data_volume': return { ...state, disp_data: [...state.disp_data.map((el) => { if (el.Key === action.payload.key) { return { ...el, Volume: action.payload.value } } else { return el} }) ]  }\n   \n    case 'reset_upload_manifest_data': return initialState\n    case 'set_consolidate_checkbox_index': return { ...state, consolidate_checkbox_index: action.payload }\n    case 'set_text_area': return { ...state, text_area: action.payload }\n    case 'set_upload_in_one': return { ...state, upload_in_one: action.payload, data: [], disp_data: [] }\n    case 'upload_manifest_reset_state': return  initialState \n    case 'set_import_template': return { ...state, import_template: action.payload }\n    case 'set_upload_manifest_open_modal_dt': return { ...state, open_modal_dt: action.payload }\n    case 'set_default_template': return { ...state, default_template: action.payload }\n    case 'set_disp_data': return { ...state, disp_data: [...state.disp_data.concat(action.payload) ] }\n    case 'upload_manifest_check_template_checkbox': return { ...state, disp_template_list: [...state.disp_template_list.map((el) => { if (el.Key === action.payload) { return { ...el, selected: !el.selected } } else { return el} }) ] }\n    case 'upload_manifest_reset_template_checkbox': return { ...state, disp_template_list: [...state.disp_template_list.map((el) => { return { ...el, selected: false } })] }\n    case 'upload_manifest_remove_disp': return { ...state, disp_data: state.disp_data.filter(el=>el.Key !== action.payload)}\n    case 'upload_manifest_check_checkbox': return { ...state, data: state.data.map((el,index)=>{\n      \n      if (index === action.payload.element_index) {\n        return el.map((cell,cell_index)=>{\n         \n          if(cell_index === action.payload.cell_index) {\n           \n            return !cell\n          } else {\n        \n            return cell\n          }\n        })\n      } else {\n       \n        return el\n      }\n    }) }\n\n\n    case 'set_disp_status': return { ...state, disp_data: state.disp_data.map((el,index)=>{\n      if (el.Key === action.payload.Key){\n        return {...el, Status: action.payload.Status, Num: action.payload.Num, print_data: {data:action.payload.print_data[0], cargo:action.payload.print_data[1]}}\n      } else {\n        return el\n      }\n    })}\n\n    case 'set_disp_template_list': return { ...state, disp_template_list: action.payload }\n\n    case 'set_import_template_list':\n      if (action.payload.length === 0) {\n        return { ...state, import_template_list: action.payload }\n      } else {\n        return { ...state, import_template_list: action.payload, import_template: action.payload[0] }\n      }\n\n    case 'set_default_template_list':\n      if (action.payload.length === 0) {\n        return { ...state, default_template_list: action.payload }\n      } else {\n        return { ...state, default_template_list: action.payload, default_template: action.payload[0] }\n      }\n\n    case 'set_data_upload_manifest':\n      const chars = state.text_area.split(String.fromCharCode(10))\n      const data = []\n      let consolidate_checkbox_index = 0\n      chars.forEach(element => {\n        let el = element.split(String.fromCharCode(9))\n        if(state.upload_in_one.value){\n          el.push(false)\n          consolidate_checkbox_index = el.length - 1\n        }\n        data.push(\n          el\n          )\n          // data.push(false)\n      })\n\n      return { ...state, chars: chars, data: data, consolidate_checkbox_index: consolidate_checkbox_index }\n\n    case 'add_data_upload_manifest':\n      state.data.push(action.payload)\n      // return { ...state, data: state.data};\n    default: return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}