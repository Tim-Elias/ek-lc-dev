{"ast":null,"code":"const initialState = {\n  CityList: [],\n  CargoInfoType: {\n    label: 'Внести информацию о каждом грузе',\n    value: false\n  },\n  PayType: {\n    label: 'Безналичная оплата',\n    value: 'Безналичная оплата'\n  },\n  DelMethod: 'Дверь - Дверь',\n  CustomerEmailInformer: false,\n  Number: 0,\n  OpenModalSendTemplate: false,\n  OpenModalRecTemplate: false,\n  FilterModalSendTemplate: \"\",\n  FilterModalRecTemplate: \"\",\n  SendTerminalList: [],\n  RecTerminalList: [],\n  SelectedSendCity: null,\n  SelectedRecCity: null,\n  SendCity: '',\n  SendAdress: '',\n  SendCompany: '',\n  SendPhone: '',\n  SendPerson: '',\n  SendAddInfo: '',\n  SendEmail: '',\n  SendTerminal: false,\n  SendSelectTerminal: {},\n  SendEmailInformer: false,\n  RecCity: '',\n  RecAdress: '',\n  RecCompany: '',\n  RecPhone: '',\n  RecPerson: '',\n  RecAddInfo: '',\n  RecEmail: '',\n  RecTerminal: false,\n  RecSelectTerminal: {},\n  RecEmailInformer: false,\n  Cargo: [{\n    Weight: 0.3,\n    L: 20,\n    W: 30,\n    H: 2,\n    Q: 1,\n    CargoType: 0,\n    Comment: ''\n  }],\n  Total: 0,\n  Weight: 0,\n  Volume: 0,\n  Termo: '',\n  IRR: false,\n  Fragile: false,\n  DelType: ''\n};\nexport default function dispatch(state = initialState, action) {\n  switch (action.type) {\n    case 'SetDelMethod':\n      return { ...state,\n        DelMethod: action.payload\n      };\n\n    case 'SetOpenModalRecTemplate':\n      return { ...state,\n        OpenModalRecTemplate: action.payload\n      };\n\n    case 'SetOpenModalSendTemplate':\n      return { ...state,\n        OpenModalSendTemplate: action.payload\n      };\n\n    case 'SetFilterModalSendTemplate':\n      return { ...state,\n        FilterModalSendTemplate: action.payload\n      };\n\n    case 'SetFilterModalRecTemplate':\n      return { ...state,\n        FilterModalRecTemplate: action.payload\n      };\n\n    case 'SetSelectedSendCity':\n      return { ...state,\n        SelectedSendCity: action.payload\n      };\n\n    case 'SetSelectedRecCity':\n      return { ...state,\n        SelectedRecCity: action.payload\n      };\n\n    case 'SetPayType':\n      return { ...state,\n        PayType: action.payload\n      };\n\n    case 'SetSendCity':\n      return { ...state,\n        SendCity: action.payload\n      };\n\n    case 'SetSendAdress':\n      return { ...state,\n        SendAdress: action.payload\n      };\n\n    case 'SetSendCompany':\n      return { ...state,\n        SendCompany: action.payload\n      };\n\n    case 'SetSendPhone':\n      return { ...state,\n        SendPhone: action.payload\n      };\n\n    case 'SetSendPerson':\n      return { ...state,\n        SendPerson: action.payload\n      };\n\n    case 'SetSendAddInfo':\n      return { ...state,\n        SendAddInfo: action.payload\n      };\n\n    case 'SetSendEmail':\n      return { ...state,\n        SendEmail: action.payload\n      };\n\n    case 'SetSendTerminal':\n      return { ...state,\n        SendTerminal: action.payload.SendTerminal,\n        DelMethod: action.payload.DelMethod\n      };\n\n    case 'SetSendEmailInformer':\n      return { ...state,\n        SendEmailInformer: action.payload\n      };\n\n    case 'SetRecCity':\n      return { ...state,\n        RecCity: action.payload\n      };\n\n    case 'SetRecAdress':\n      return { ...state,\n        RecAdress: action.payload\n      };\n\n    case 'SetRecCompany':\n      return { ...state,\n        RecCompany: action.payload\n      };\n\n    case 'SetRecPhone':\n      return { ...state,\n        RecPhone: action.payload\n      };\n\n    case 'SetRecPerson':\n      return { ...state,\n        RecPerson: action.payload\n      };\n\n    case 'SetRecAddInfo':\n      return { ...state,\n        RecAddInfo: action.payload\n      };\n\n    case 'SetRecEmail':\n      return { ...state,\n        RecEmail: action.payload\n      };\n\n    case 'SetRecTerminal':\n      return { ...state,\n        RecTerminal: action.payload.RecTerminal,\n        DelMethod: action.payload.DelMethod\n      };\n\n    case 'SetRecEmailInformer':\n      return { ...state,\n        RecEmailInformer: action.payload\n      };\n\n    case 'SetRecTerminalList':\n      if (action.payload.length == 0) {\n        return { ...state,\n          RecTerminalList: action.payload\n        };\n      } else {\n        return { ...state,\n          RecTerminalList: action.payload,\n          RecSelectTerminal: action.payload[0]\n        };\n      }\n\n      ;\n\n    case 'SetSendTerminalList':\n      if (action.payload.length == 0) {\n        return { ...state,\n          SendTerminalList: action.payload\n        };\n      } else {\n        return { ...state,\n          SendTerminalList: action.payload,\n          SendSelectTerminal: action.payload[0]\n        };\n      }\n\n      ;\n    // cargo\n\n    case 'SetCargoWeight':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              Weight: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoW':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              W: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoL':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              L: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoH':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              H: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoQ':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              Q: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoComment':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              Comment: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoType':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              Type: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'RemoveCargo':\n      return { ...state,\n        Cargo: state.Cargo.filter((el, index) => {\n          return index !== action.payload;\n        })\n      };\n\n    case 'AddCargo':\n      state.Cargo.push({\n        Weight: 0.3,\n        L: 20,\n        W: 30,\n        H: 2,\n        Q: 1,\n        CargoType: 0,\n        Comment: ''\n      });\n      return { ...state,\n        Cargo: state.Cargo\n      };\n\n    case 'SetCargoInfoType':\n      return { ...state,\n        CargoInfoType: action.payload\n      };\n\n    case 'SetTotal':\n      return { ...state,\n        Total: action.payload\n      };\n\n    case 'SetWeight':\n      return { ...state,\n        Weight: action.payload\n      };\n\n    case 'SetVolume':\n      return { ...state,\n        Volume: action.payload\n      };\n\n    case 'SetTermo':\n      return { ...state,\n        PayType: action.payload\n      };\n\n    case 'SetIRR':\n      return { ...state,\n        PayType: action.payload\n      };\n\n    case 'SetFragile':\n      return { ...state,\n        PayType: action.payload\n      };\n\n    case 'SetDelType':\n      return { ...state,\n        PayType: action.payload\n      };\n\n    case 'SetCustomerEmailInformer':\n      return { ...state,\n        CustomerEmailInformer: action.payload\n      };\n\n    case 'SetCityList':\n      return { ...state,\n        CityList: action.payload\n      };\n\n    case 'SetSendSelectTerminal':\n      return { ...state,\n        SendSelectTerminal: action.payload\n      };\n\n    case 'SetRecSelectTerminal':\n      return { ...state,\n        RecSelectTerminal: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/elias/Documents/kinetika/src/reducers/create_disp.js"],"names":["initialState","CityList","CargoInfoType","label","value","PayType","DelMethod","CustomerEmailInformer","Number","OpenModalSendTemplate","OpenModalRecTemplate","FilterModalSendTemplate","FilterModalRecTemplate","SendTerminalList","RecTerminalList","SelectedSendCity","SelectedRecCity","SendCity","SendAdress","SendCompany","SendPhone","SendPerson","SendAddInfo","SendEmail","SendTerminal","SendSelectTerminal","SendEmailInformer","RecCity","RecAdress","RecCompany","RecPhone","RecPerson","RecAddInfo","RecEmail","RecTerminal","RecSelectTerminal","RecEmailInformer","Cargo","Weight","L","W","H","Q","CargoType","Comment","Total","Volume","Termo","IRR","Fragile","DelType","dispatch","state","action","type","payload","length","map","el","index","Type","filter","push"],"mappings":"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","sourcesContent":["const initialState = {\n  CityList: [],\n  CargoInfoType: { label: 'Внести информацию о каждом грузе', value: false },\n  PayType: { label: 'Безналичная оплата', value: 'Безналичная оплата' },\n  DelMethod: 'Дверь - Дверь',\n  CustomerEmailInformer: false,\n\n  Number: 0,\n\n  OpenModalSendTemplate: false,\n  OpenModalRecTemplate: false,\n\n  FilterModalSendTemplate: \"\",\n  FilterModalRecTemplate: \"\",\n  \n  SendTerminalList: [],\n  RecTerminalList: [],\n\n  SelectedSendCity: null,\n  SelectedRecCity: null,\n\n  SendCity: '',\n  SendAdress: '',\n  SendCompany: '',\n  SendPhone: '',\n  SendPerson: '',\n  SendAddInfo: '',\n  SendEmail: '',\n  SendTerminal: false,\n  SendSelectTerminal: {},\n  SendEmailInformer: false,\n\n  RecCity: '',\n  RecAdress: '',\n  RecCompany: '',\n  RecPhone: '',\n  RecPerson: '',\n  RecAddInfo: '',\n  RecEmail: '',\n  RecTerminal: false,\n  RecSelectTerminal: {},\n  RecEmailInformer: false,\n\n  Cargo: [{\n\n    Weight: 0.3,\n    L: 20,\n    W: 30,\n    H: 2,\n\n    Q: 1,\n\n    CargoType: 0,\n    Comment: ''\n  }],\n  Total: 0,\n  Weight: 0,\n  Volume: 0,\n\n  Termo: '',\n\n  IRR: false,\n  Fragile: false,\n  DelType: ''\n\n}\n\nexport default function dispatch (state = initialState, action) {\n  switch (action.type) {\n    case 'SetDelMethod': return { ...state, DelMethod: action.payload }\n\n    case 'SetOpenModalRecTemplate': return { ...state, OpenModalRecTemplate: action.payload }\n    case 'SetOpenModalSendTemplate': return { ...state, OpenModalSendTemplate: action.payload }\n    \n    case 'SetFilterModalSendTemplate': return { ...state, FilterModalSendTemplate: action.payload }\n    case 'SetFilterModalRecTemplate': return { ...state, FilterModalRecTemplate: action.payload }\n\n    case 'SetSelectedSendCity': return { ...state, SelectedSendCity: action.payload }\n    case 'SetSelectedRecCity': return { ...state, SelectedRecCity: action.payload }\n\n    case 'SetPayType': return { ...state, PayType: action.payload }\n    case 'SetSendCity': return { ...state, SendCity: action.payload }\n    case 'SetSendAdress': return { ...state, SendAdress: action.payload }\n    case 'SetSendCompany': return { ...state, SendCompany: action.payload }\n    case 'SetSendPhone': return { ...state, SendPhone: action.payload }\n    case 'SetSendPerson': return { ...state, SendPerson: action.payload }\n    case 'SetSendAddInfo': return { ...state, SendAddInfo: action.payload }\n    case 'SetSendEmail': return { ...state, SendEmail: action.payload }\n    case 'SetSendTerminal': return { ...state, SendTerminal: action.payload.SendTerminal, DelMethod: action.payload.DelMethod }\n    case 'SetSendEmailInformer': return { ...state, SendEmailInformer: action.payload }\n\n    case 'SetRecCity': return { ...state, RecCity: action.payload }\n    case 'SetRecAdress': return { ...state, RecAdress: action.payload }\n    case 'SetRecCompany': return { ...state, RecCompany: action.payload }\n    case 'SetRecPhone': return { ...state, RecPhone: action.payload }\n    case 'SetRecPerson': return { ...state, RecPerson: action.payload }\n    case 'SetRecAddInfo': return { ...state, RecAddInfo: action.payload }\n    case 'SetRecEmail': return { ...state, RecEmail: action.payload }\n    case 'SetRecTerminal': return { ...state, RecTerminal: action.payload.RecTerminal, DelMethod: action.payload.DelMethod }\n    case 'SetRecEmailInformer': return { ...state, RecEmailInformer: action.payload }\n\n    case 'SetRecTerminalList': if (action.payload.length == 0) {\n      return { ...state, RecTerminalList: action.payload }\n    } else {\n      return { ...state, RecTerminalList: action.payload, RecSelectTerminal: action.payload[0] }\n    };\n\n    case 'SetSendTerminalList': if (action.payload.length == 0) {\n      return { ...state, SendTerminalList: action.payload }\n    } else {\n      return { ...state, SendTerminalList: action.payload, SendSelectTerminal: action.payload[0] }\n    };\n\n      // cargo\n\n    case 'SetCargoWeight': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, Weight: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'SetCargoW': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, W: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'SetCargoL': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, L: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'SetCargoH': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, H: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'SetCargoQ': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, Q: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'SetCargoComment': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, Comment: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'SetCargoType': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, Type: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'RemoveCargo': return {\n      ...state,\n      Cargo: state.Cargo.filter((el, index) => {\n        return index !== action.payload\n      })\n    }\n\n    case 'AddCargo':\n\n      state.Cargo.push({\n\n        Weight: 0.3,\n        L: 20,\n        W: 30,\n        H: 2,\n\n        Q: 1,\n\n        CargoType: 0,\n        Comment: ''\n      })\n\n      return { ...state, Cargo: state.Cargo }\n\n    case 'SetCargoInfoType': return { ...state, CargoInfoType: action.payload }\n\n    case 'SetTotal': return { ...state, Total: action.payload }\n    case 'SetWeight': return { ...state, Weight: action.payload }\n    case 'SetVolume': return { ...state, Volume: action.payload }\n\n    case 'SetTermo': return { ...state, PayType: action.payload }\n    case 'SetIRR': return { ...state, PayType: action.payload }\n    case 'SetFragile': return { ...state, PayType: action.payload }\n    case 'SetDelType': return { ...state, PayType: action.payload }\n\n    case 'SetCustomerEmailInformer': return { ...state, CustomerEmailInformer: action.payload }\n\n    case 'SetCityList': return { ...state, CityList: action.payload }\n    case 'SetSendSelectTerminal': return { ...state, SendSelectTerminal: action.payload }\n    case 'SetRecSelectTerminal': return { ...state, RecSelectTerminal: action.payload }\n\n    default: return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}