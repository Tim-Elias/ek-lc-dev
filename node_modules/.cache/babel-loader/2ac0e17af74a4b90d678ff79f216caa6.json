{"ast":null,"code":"const initialState = {\n  message: \"\",\n  list: [],\n  barcode: '',\n  column: {\n    id: 'column-1',\n    numberIds: ['four', 'one', 'five', 'three', 'two']\n  },\n  numbers: {\n    'five': {\n      id: 'five',\n      content: '5'\n    },\n    'four': {\n      id: 'four',\n      content: '4'\n    },\n    'one': {\n      id: 'one',\n      content: '1'\n    },\n    'three': {\n      id: 'three',\n      content: '3'\n    },\n    'two': {\n      id: 'two',\n      content: '2'\n    }\n  }\n};\nexport default function dispatch(state = initialState, action) {\n  switch (action.type) {\n    case 'set_message':\n      return { ...state,\n        message: action.payload\n      };\n\n    case 'test_list_add_item':\n      return { ...state,\n        list: [...state.list, action.payload]\n      };\n\n    case 'set_test_barcode':\n      return { ...state,\n        barcode: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/saint/ek 3.1/ek-lc-dev/src/reducers/test.js"],"names":["initialState","message","list","barcode","column","id","numberIds","numbers","content","dispatch","state","action","type","payload"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAIjBC,EAAAA,IAAI,EAAC,EAJY;AAKjBC,EAAAA,OAAO,EAAE,EALQ;AAMjBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,EAAE,EAAE,UADA;AAEJC,IAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,MAAhB,EAAwB,OAAxB,EAAiC,KAAjC;AAFP,GANS;AAUjBC,EAAAA,OAAO,EAAE;AACL,YAAQ;AAAEF,MAAAA,EAAE,EAAE,MAAN;AAAcG,MAAAA,OAAO,EAAE;AAAvB,KADH;AAEL,YAAQ;AAAEH,MAAAA,EAAE,EAAE,MAAN;AAAcG,MAAAA,OAAO,EAAE;AAAvB,KAFH;AAGL,WAAO;AAAEH,MAAAA,EAAE,EAAE,KAAN;AAAaG,MAAAA,OAAO,EAAE;AAAtB,KAHF;AAIL,aAAS;AAAEH,MAAAA,EAAE,EAAE,OAAN;AAAeG,MAAAA,OAAO,EAAE;AAAxB,KAJJ;AAKL,WAAO;AAAEH,MAAAA,EAAE,EAAE,KAAN;AAAaG,MAAAA,OAAO,EAAE;AAAtB;AALF;AAVQ,CAArB;AAmBA,eAAe,SAASC,QAAT,CAAkBC,KAAK,GAAGV,YAA1B,EAAwCW,MAAxC,EAAgD;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AAAoB,aAAO,EAAE,GAAGF,KAAL;AAAYT,QAAAA,OAAO,EAAEU,MAAM,CAACE;AAA5B,OAAP;;AAEpB,SAAK,oBAAL;AAA2B,aAAO,EAAE,GAAGH,KAAL;AAAYR,QAAAA,IAAI,EAAE,CAAC,GAAGQ,KAAK,CAACR,IAAV,EAAgBS,MAAM,CAACE,OAAvB;AAAlB,OAAP;;AAC3B,SAAK,kBAAL;AAAyB,aAAO,EAAE,GAAGH,KAAL;AAAYP,QAAAA,OAAO,EAAEQ,MAAM,CAACE;AAA5B,OAAP;;AACzB;AAAS,aAAOH,KAAP;AALb;AAOH","sourcesContent":["const initialState = {\n\n    message: \"\",\n\n    list:[],\n    barcode: '',\n    column: {\n        id: 'column-1',\n        numberIds: ['four', 'one', 'five', 'three', 'two'],\n    },\n    numbers: {\n        'five': { id: 'five', content: '5' },\n        'four': { id: 'four', content: '4' },\n        'one': { id: 'one', content: '1' },\n        'three': { id: 'three', content: '3' },\n        'two': { id: 'two', content: '2' },\n    }\n}\n\nexport default function dispatch(state = initialState, action) {\n    switch (action.type) {\n        case 'set_message': return { ...state, message: action.payload }\n\n        case 'test_list_add_item': return { ...state, list: [...state.list, action.payload] }\n        case 'set_test_barcode': return { ...state, barcode: action.payload }\n        default: return state\n    }\n}"]},"metadata":{},"sourceType":"module"}