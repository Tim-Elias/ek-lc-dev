{"ast":null,"code":"var _jsxFileName = \"/home/saint/ek 3.1/ek-lc-dev/src/m_screen/m_reciept.js\";\nimport React from 'react';\nimport '../screen/reciept.css';\nimport { connect } from 'react-redux';\nimport { get_data } from '../common/common_modules';\nimport Scanner from \"./scanner\";\nimport scanner from '../common/scanner.png';\n\nclass Screen extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.search_reciept = () => {\n      this.props.set_active_window(\"wait\");\n      const data = {\n        userkey: this.props.store.login.userkey,\n        status: \"Ожидается\",\n        num: this.props.store.reciept.search\n      };\n      this.props.set_key(data);\n      this.props.set_last_window(\"reciept\");\n      this.props.set_active_window(\"m_disp\");\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.set_search_reciept(\"\");\n    this.props.set_scann_active(false);\n    this.props.set_search_storagre(\"\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mobile_heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043E\\u0442 \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u0435\\u043B\\u044F\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mobile_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search_reciept\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search_reciept_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u043D\\u043E\\u043C\\u0435\\u0440\\u0443:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search_reciept_data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.props.store.reciept.search,\n      className: \"search_reciept_data_input\",\n      onChange: e => this.props.set_search_reciept(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 62\n      }\n    })), /*#__PURE__*/React.createElement(\"img\", {\n      src: scanner,\n      className: \"update\",\n      onClick: e => this.props.set_scann_active(!this.props.store.storage.scann_active),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    })), this.props.store.storage.scann_active ? /*#__PURE__*/React.createElement(Scanner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search_reciept_button_area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"search_reciept_button\",\n      onClick: this.search_reciept.bind(this),\n      className: \"send_pod\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, \"\\u041D\\u0430\\u0439\\u0442\\u0438\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search_reciept_error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, this.props.store.reciept.error)));\n  }\n\n}\n\n;\nexport default connect(state => ({\n  store: state\n}), dispatch => ({\n  set_scann_active: param => {\n    dispatch({\n      type: 'set_scann_active',\n      payload: param\n    });\n  },\n  set_key: param => {\n    dispatch({\n      type: 'set_key',\n      payload: param\n    });\n  },\n  set_active_window: param => {\n    dispatch({\n      type: 'set_active_window',\n      payload: param\n    });\n  },\n  set_search_reciept: param => {\n    dispatch({\n      type: 'set_search_reciept',\n      payload: param\n    });\n  },\n  set_search_error: param => {\n    dispatch({\n      type: 'set_search_error',\n      payload: param\n    });\n  },\n  set_action: param => {\n    dispatch({\n      type: 'set_action',\n      payload: param\n    });\n  },\n  set_last_window: param => {\n    dispatch({\n      type: 'set_last_window',\n      payload: param\n    });\n  },\n  set_data_disp: param => {\n    dispatch({\n      type: 'set_data_disp',\n      payload: param\n    });\n  },\n  set_search_storagre: param => {\n    dispatch({\n      type: 'set_search_storagre',\n      payload: param\n    });\n  }\n}))(Screen);","map":{"version":3,"sources":["/home/saint/ek 3.1/ek-lc-dev/src/m_screen/m_reciept.js"],"names":["React","connect","get_data","Scanner","scanner","Screen","Component","search_reciept","props","set_active_window","data","userkey","store","login","status","num","reciept","search","set_key","set_last_window","componentWillUnmount","set_search_reciept","set_scann_active","set_search_storagre","render","e","target","value","storage","scann_active","bind","error","state","dispatch","param","type","payload","set_search_error","set_action","set_data_disp"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../screen/reciept.css';\nimport { connect } from 'react-redux';\nimport { get_data } from '../common/common_modules';\nimport Scanner from \"./scanner\";\nimport scanner from '../common/scanner.png';\n\nclass Screen extends React.Component {\n\n    search_reciept = () => {\n        this.props.set_active_window(\"wait\");\n\n        const data = {\n            userkey: this.props.store.login.userkey,\n            status: \"Ожидается\",\n            num: this.props.store.reciept.search,\n        };\n\n        this.props.set_key(data);\n        this.props.set_last_window(\"reciept\");\n        this.props.set_active_window(\"m_disp\");\n    }\n\n    componentWillUnmount() {\n        this.props.set_search_reciept(\"\");\n        this.props.set_scann_active(false);\n        this.props.set_search_storagre(\"\");\n    }\n\n    render() {\n        \n        return (\n            <div>\n                <div className=\"mobile_heading\">\n                    Получить от отправителя\n                </div>\n                <div className=\"mobile_container\">\n                    <div className=\"search_reciept\">\n                        <div className=\"search_reciept_label\">Поиск по номеру:</div>\n                        <div className=\"search_reciept_data\"><input value={this.props.store.reciept.search} className=\"search_reciept_data_input\" onChange={e => this.props.set_search_reciept(e.target.value)}></input></div>\n                        <img src={scanner} className=\"update\" onClick={e => this.props.set_scann_active(!this.props.store.storage.scann_active)} />\n                    </div>\n                    {this.props.store.storage.scann_active ? (\n                        <Scanner />\n                    ) : (null)}\n                    <div className=\"search_reciept_button_area\">\n                        <button id=\"search_reciept_button\" onClick={this.search_reciept.bind(this)} className=\"send_pod\">Найти</button>\n                    </div>\n                    <div className=\"search_reciept_error\">{this.props.store.reciept.error}</div>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default connect(\n    state => ({\n        store: state\n    }),\n    dispatch => ({\n        set_scann_active: (param) => { dispatch({ type: 'set_scann_active', payload: param }) },\n        set_key: (param) => { dispatch({ type: 'set_key', payload: param }) },\n        set_active_window: (param) => { dispatch({ type: 'set_active_window', payload: param }) },\n        set_search_reciept: (param) => { dispatch({ type: 'set_search_reciept', payload: param }) },\n        set_search_error: (param) => { dispatch({ type: 'set_search_error', payload: param }) },\n        set_action: (param) => { dispatch({ type: 'set_action', payload: param }) },\n        set_last_window: (param) => { dispatch({ type: 'set_last_window', payload: param }) },\n        set_data_disp: (param) => { dispatch({ type: 'set_data_disp', payload: param }) },\n        set_search_storagre: (param) => { dispatch({ type: 'set_search_storagre', payload: param }) },\n    })\n)(Screen);"]},"metadata":{},"sourceType":"module"}