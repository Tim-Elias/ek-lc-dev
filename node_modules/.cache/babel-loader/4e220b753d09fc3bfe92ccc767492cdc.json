{"ast":null,"code":"const initialState = {\n  CityList: [],\n  CargoInfoType: {\n    label: 'Внести информацию о каждом грузе',\n    value: false\n  },\n  PayType: {\n    label: 'Безналичная оплата',\n    value: 'Безналичная оплата'\n  },\n  PayerList: [],\n  Payer: {\n    name: '',\n    id: ''\n  },\n  DelMethod: 'Дверь - Дверь',\n  CustomerEmailInformer: false,\n  Number: 0,\n  OpenModalSendTemplate: false,\n  OpenModalRecTemplate: false,\n  FilterModalSendTemplate: \"\",\n  FilterModalRecTemplate: \"\",\n  SendTerminalList: [],\n  RecTerminalList: [],\n  SelectedSendCity: null,\n  SelectedRecCity: null,\n  SendCity: '',\n  SendAdress: '',\n  SendCompany: '',\n  SendPhone: '',\n  SendPerson: '',\n  SendAddInfo: '',\n  SendEmail: '',\n  SendTerminal: false,\n  SendSelectTerminal: {},\n  SendEmailInformer: false,\n  RecCity: '',\n  RecAdress: '',\n  RecCompany: '',\n  RecPhone: '',\n  RecPerson: '',\n  RecAddInfo: '',\n  RecEmail: '',\n  RecTerminal: false,\n  RecSelectTerminal: {},\n  RecEmailInformer: false,\n  Cargo: [{\n    Weight: 0,\n    L: 0,\n    W: 0,\n    H: 0,\n    Q: 1,\n    CargoType: 0,\n    Comment: ''\n  }],\n  Total: 0,\n  Weight: 0,\n  Volume: 0,\n  COD: 0,\n  InsureValue: 0,\n  Termo: '',\n  IRR: false,\n  Fragile: false,\n  DelType: ''\n};\nexport default function dispatch(state = initialState, action) {\n  switch (action.type) {\n    case 'reset_create_disp_data':\n      return initialState;\n\n    case 'SetDelMethod':\n      return { ...state,\n        DelMethod: action.payload\n      };\n\n    case 'SetPayerList':\n      return { ...state,\n        PayerList: action.payload\n      };\n\n    case 'SetPayer':\n      return { ...state,\n        Payer: action.payload\n      };\n\n    case 'SetCOD':\n      return { ...state,\n        COD: action.payload\n      };\n\n    case 'SetInsureValue':\n      return { ...state,\n        InsureValue: action.payload\n      };\n\n    case 'SetOpenModalRecTemplate':\n      return { ...state,\n        OpenModalRecTemplate: action.payload\n      };\n\n    case 'SetOpenModalSendTemplate':\n      return { ...state,\n        OpenModalSendTemplate: action.payload\n      };\n\n    case 'SetFilterModalSendTemplate':\n      return { ...state,\n        FilterModalSendTemplate: action.payload\n      };\n\n    case 'SetFilterModalRecTemplate':\n      return { ...state,\n        FilterModalRecTemplate: action.payload\n      };\n\n    case 'SetSelectedSendCity':\n      return { ...state,\n        SelectedSendCity: action.payload\n      };\n\n    case 'SetSelectedRecCity':\n      return { ...state,\n        SelectedRecCity: action.payload\n      };\n\n    case 'SetPayType':\n      return { ...state,\n        PayType: action.payload\n      };\n\n    case 'SetSendCity':\n      return { ...state,\n        SendCity: action.payload\n      };\n\n    case 'SetSendAdress':\n      return { ...state,\n        SendAdress: action.payload\n      };\n\n    case 'SetSendCompany':\n      return { ...state,\n        SendCompany: action.payload\n      };\n\n    case 'SetSendPhone':\n      return { ...state,\n        SendPhone: action.payload\n      };\n\n    case 'SetSendPerson':\n      return { ...state,\n        SendPerson: action.payload\n      };\n\n    case 'SetSendAddInfo':\n      return { ...state,\n        SendAddInfo: action.payload\n      };\n\n    case 'SetSendEmail':\n      return { ...state,\n        SendEmail: action.payload\n      };\n\n    case 'SetSendTerminal':\n      return { ...state,\n        SendTerminal: action.payload.SendTerminal,\n        DelMethod: action.payload.DelMethod\n      };\n\n    case 'SetSendEmailInformer':\n      return { ...state,\n        SendEmailInformer: action.payload\n      };\n\n    case 'SetRecCity':\n      return { ...state,\n        RecCity: action.payload\n      };\n\n    case 'SetRecAdress':\n      return { ...state,\n        RecAdress: action.payload\n      };\n\n    case 'SetRecCompany':\n      return { ...state,\n        RecCompany: action.payload\n      };\n\n    case 'SetRecPhone':\n      return { ...state,\n        RecPhone: action.payload\n      };\n\n    case 'SetRecPerson':\n      return { ...state,\n        RecPerson: action.payload\n      };\n\n    case 'SetRecAddInfo':\n      return { ...state,\n        RecAddInfo: action.payload\n      };\n\n    case 'SetRecEmail':\n      return { ...state,\n        RecEmail: action.payload\n      };\n\n    case 'SetRecTerminal':\n      return { ...state,\n        RecTerminal: action.payload.RecTerminal,\n        DelMethod: action.payload.DelMethod\n      };\n\n    case 'SetRecEmailInformer':\n      return { ...state,\n        RecEmailInformer: action.payload\n      };\n\n    case 'SetRecTerminalList':\n      if (action.payload.length == 0) {\n        return { ...state,\n          RecTerminalList: action.payload\n        };\n      } else {\n        return { ...state,\n          RecTerminalList: action.payload,\n          RecSelectTerminal: action.payload[0]\n        };\n      }\n\n      ;\n\n    case 'SetSendTerminalList':\n      if (action.payload.length == 0) {\n        return { ...state,\n          SendTerminalList: action.payload\n        };\n      } else {\n        return { ...state,\n          SendTerminalList: action.payload,\n          SendSelectTerminal: action.payload[0]\n        };\n      }\n\n      ;\n    // cargo\n\n    case 'SetCargoWeight':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              Weight: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoW':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              W: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoL':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              L: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoH':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              H: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoQ':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              Q: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoComment':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              Comment: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoType':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              Type: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'RemoveCargo':\n      return { ...state,\n        Cargo: state.Cargo.filter((el, index) => {\n          return index !== action.payload;\n        })\n      };\n\n    case 'AddCargo':\n      state.Cargo.push({\n        Weight: 0,\n        L: 0,\n        W: 0,\n        H: 0,\n        Q: 1,\n        CargoType: 0,\n        Comment: ''\n      });\n      return { ...state,\n        Cargo: state.Cargo\n      };\n\n    case 'SetCargoInfoType':\n      return { ...state,\n        CargoInfoType: action.payload\n      };\n\n    case 'SetTotal':\n      return { ...state,\n        Total: action.payload\n      };\n\n    case 'SetWeight':\n      return { ...state,\n        Weight: action.payload\n      };\n\n    case 'SetVolume':\n      return { ...state,\n        Volume: action.payload\n      };\n\n    case 'SetTermo':\n      return { ...state,\n        PayType: action.payload\n      };\n\n    case 'SetIRR':\n      return { ...state,\n        PayType: action.payload\n      };\n\n    case 'SetFragile':\n      return { ...state,\n        PayType: action.payload\n      };\n\n    case 'SetDelType':\n      return { ...state,\n        PayType: action.payload\n      };\n\n    case 'SetCustomerEmailInformer':\n      return { ...state,\n        CustomerEmailInformer: action.payload\n      };\n\n    case 'SetCityList':\n      return { ...state,\n        CityList: action.payload\n      };\n\n    case 'SetSendSelectTerminal':\n      return { ...state,\n        SendSelectTerminal: action.payload\n      };\n\n    case 'SetRecSelectTerminal':\n      return { ...state,\n        RecSelectTerminal: action.payload\n      };\n\n    case 'set_copy_disp_data':\n      const CargoTypeList = [{\n        label: \"Сейф-пакет\",\n        value: \"СейфПакет\"\n      }, {\n        label: \"Коробка\",\n        value: \"Коробка\"\n      }, {\n        label: \"Контейнер\",\n        value: \"Контейнер\"\n      }, {\n        label: \"Мешок под пломбой\",\n        value: \"МешокПодПломбой\"\n      }, {\n        label: \"Прочее\",\n        value: \"Прочее\"\n      }];\n      console.log(action.payload.Cargo);\n      return { ...state,\n        Number: action.payload.Number,\n        PayType: action.payload.PayType,\n        SendAdress: action.payload.SendAdress,\n        SendCompany: action.payload.SendCompany,\n        SendPhone: action.payload.SendPhone,\n        SendPerson: action.payload.SendPerson,\n        SendAddInfo: action.payload.SendAddInfo,\n        SendEmail: action.payload.SendEmail,\n        SendTerminal: action.payload.SendTerminal,\n        // SendSelectTerminal: {},\n        InsureValue: action.payload.InsureValue,\n        COD: action.payload.COD,\n        RecAdress: action.payload.RecAdress,\n        RecCompany: action.payload.RecCompany,\n        RecPhone: action.payload.RecPhone,\n        RecPerson: action.payload.RecPerson,\n        RecAddInfo: action.payload.RecAddInfo,\n        RecEmail: action.payload.RecEmail,\n        RecTerminal: action.payload.RecTerminal,\n        // RecSelectTerminal: {},\n        CargoInfoType: action.payload.CargoInfoType,\n        Volume: action.payload.Volume,\n        Total: action.payload.Total,\n        Weight: action.payload.Weight,\n        Cargo: action.payload.Cargo.map(el => {\n          const cargo_type = el.Type;\n          const CargoTypeListEl = CargoTypeList.find(el_list => el_list.value === el.Type);\n          console.log(cargo_type);\n          console.log(CargoTypeListEl);\n          return {\n            Weight: el.Weight,\n            L: el.L,\n            W: el.W,\n            H: el.H,\n            Q: el.Q,\n            Type: CargoTypeList.find(el_list => el_list.label === el.Type),\n            Comment: el.Comment\n          };\n        })\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/elias/Documents/ek-lc-dev/src/reducers/create_disp.js"],"names":["initialState","CityList","CargoInfoType","label","value","PayType","PayerList","Payer","name","id","DelMethod","CustomerEmailInformer","Number","OpenModalSendTemplate","OpenModalRecTemplate","FilterModalSendTemplate","FilterModalRecTemplate","SendTerminalList","RecTerminalList","SelectedSendCity","SelectedRecCity","SendCity","SendAdress","SendCompany","SendPhone","SendPerson","SendAddInfo","SendEmail","SendTerminal","SendSelectTerminal","SendEmailInformer","RecCity","RecAdress","RecCompany","RecPhone","RecPerson","RecAddInfo","RecEmail","RecTerminal","RecSelectTerminal","RecEmailInformer","Cargo","Weight","L","W","H","Q","CargoType","Comment","Total","Volume","COD","InsureValue","Termo","IRR","Fragile","DelType","dispatch","state","action","type","payload","length","map","el","index","Type","filter","push","CargoTypeList","console","log","cargo_type","CargoTypeListEl","find","el_list"],"mappings":"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","sourcesContent":["const initialState = {\n  \n\n  CityList: [],\n  CargoInfoType: { label: 'Внести информацию о каждом грузе', value: false },\n  PayType: { label: 'Безналичная оплата', value: 'Безналичная оплата' },\n  PayerList: [],\n  Payer: {name:'', id:''},\n  DelMethod: 'Дверь - Дверь',\n  CustomerEmailInformer: false,\n\n  Number: 0,\n\n  OpenModalSendTemplate: false,\n  OpenModalRecTemplate: false,\n\n  FilterModalSendTemplate: \"\", \n  FilterModalRecTemplate: \"\",\n  \n  SendTerminalList: [],\n  RecTerminalList: [],\n\n  SelectedSendCity: null,\n  SelectedRecCity: null,\n\n  SendCity: '',\n  SendAdress: '',\n  SendCompany: '',\n  SendPhone: '',\n  SendPerson: '',\n  SendAddInfo: '',\n  SendEmail: '',\n  SendTerminal: false,\n  SendSelectTerminal: {},\n  SendEmailInformer: false,\n\n  RecCity: '',\n  RecAdress: '',\n  RecCompany: '',\n  RecPhone: '',\n  RecPerson: '',\n  RecAddInfo: '',\n  RecEmail: '',\n  RecTerminal: false,\n  RecSelectTerminal: {},\n  RecEmailInformer: false,\n\n  Cargo: [{\n\n    Weight: 0,\n    L: 0,\n    W: 0,\n    H: 0,\n\n    Q: 1,\n\n    CargoType: 0,\n    Comment: ''\n  }],\n  Total: 0,\n  Weight: 0,\n  Volume: 0,\n  COD: 0,\n  InsureValue: 0,\n\n\n  Termo: '',\n\n  IRR: false,\n  Fragile: false,\n  DelType: ''\n\n}\n\nexport default function dispatch (state = initialState, action) {\n  switch (action.type) {\n\n    \n    case 'reset_create_disp_data': return  initialState \n    case 'SetDelMethod': return { ...state, DelMethod: action.payload }\n\n    case 'SetPayerList': return { ...state, PayerList: action.payload }\n\n    case 'SetPayer': return { ...state, Payer: action.payload }\n\n    case 'SetCOD': return { ...state, COD: action.payload }\n    case 'SetInsureValue': return { ...state, InsureValue: action.payload }\n\n    case 'SetOpenModalRecTemplate': return { ...state, OpenModalRecTemplate: action.payload }\n    case 'SetOpenModalSendTemplate': return { ...state, OpenModalSendTemplate: action.payload }\n    \n    case 'SetFilterModalSendTemplate': return { ...state, FilterModalSendTemplate: action.payload }\n    case 'SetFilterModalRecTemplate': return { ...state, FilterModalRecTemplate: action.payload }\n\n    case 'SetSelectedSendCity': return { ...state, SelectedSendCity: action.payload }\n    case 'SetSelectedRecCity': return { ...state, SelectedRecCity: action.payload }\n\n    case 'SetPayType': return { ...state, PayType: action.payload }\n    case 'SetSendCity': return { ...state, SendCity: action.payload }\n    case 'SetSendAdress': return { ...state, SendAdress: action.payload }\n    case 'SetSendCompany': return { ...state, SendCompany: action.payload }\n    case 'SetSendPhone': return { ...state, SendPhone: action.payload }\n    case 'SetSendPerson': return { ...state, SendPerson: action.payload }\n    case 'SetSendAddInfo': return { ...state, SendAddInfo: action.payload }\n    case 'SetSendEmail': return { ...state, SendEmail: action.payload }\n    case 'SetSendTerminal': return { ...state, SendTerminal: action.payload.SendTerminal, DelMethod: action.payload.DelMethod }\n    case 'SetSendEmailInformer': return { ...state, SendEmailInformer: action.payload }\n\n    case 'SetRecCity': return { ...state, RecCity: action.payload }\n    case 'SetRecAdress': return { ...state, RecAdress: action.payload }\n    case 'SetRecCompany': return { ...state, RecCompany: action.payload }\n    case 'SetRecPhone': return { ...state, RecPhone: action.payload }\n    case 'SetRecPerson': return { ...state, RecPerson: action.payload }\n    case 'SetRecAddInfo': return { ...state, RecAddInfo: action.payload }\n    case 'SetRecEmail': return { ...state, RecEmail: action.payload }\n    case 'SetRecTerminal': return { ...state, RecTerminal: action.payload.RecTerminal, DelMethod: action.payload.DelMethod }\n    case 'SetRecEmailInformer': return { ...state, RecEmailInformer: action.payload }\n\n    case 'SetRecTerminalList': if (action.payload.length == 0) {\n      return { ...state, RecTerminalList: action.payload }\n    } else {\n      return { ...state, RecTerminalList: action.payload, RecSelectTerminal: action.payload[0] }\n    };\n\n    case 'SetSendTerminalList': if (action.payload.length == 0) {\n      return { ...state, SendTerminalList: action.payload }\n    } else {\n      return { ...state, SendTerminalList: action.payload, SendSelectTerminal: action.payload[0] }\n    };\n\n      // cargo\n\n    case 'SetCargoWeight': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, Weight: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'SetCargoW': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, W: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'SetCargoL': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, L: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'SetCargoH': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, H: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'SetCargoQ': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, Q: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'SetCargoComment': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, Comment: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'SetCargoType': return {\n      ...state,\n      Cargo: state.Cargo.map((el, index) => {\n        if (index == action.payload.index) {\n          return { ...el, Type: action.payload.value }\n        } else {\n          return el\n        }\n      })\n    }\n\n    case 'RemoveCargo': return {\n      ...state,\n      Cargo: state.Cargo.filter((el, index) => {\n        return index !== action.payload\n      })\n    }\n\n    case 'AddCargo':\n\n      state.Cargo.push({\n\n        Weight: 0,\n        L: 0,\n        W: 0,\n        H: 0,\n\n        Q: 1,\n\n        CargoType: 0,\n        Comment: ''\n      })\n\n      return { ...state, Cargo: state.Cargo }\n\n    case 'SetCargoInfoType': return { ...state, CargoInfoType: action.payload }\n\n    case 'SetTotal': return { ...state, Total: action.payload }\n    case 'SetWeight': return { ...state, Weight: action.payload }\n    case 'SetVolume': return { ...state, Volume: action.payload }\n\n    case 'SetTermo': return { ...state, PayType: action.payload }\n    case 'SetIRR': return { ...state, PayType: action.payload }\n    case 'SetFragile': return { ...state, PayType: action.payload }\n    case 'SetDelType': return { ...state, PayType: action.payload }\n\n    case 'SetCustomerEmailInformer': return { ...state, CustomerEmailInformer: action.payload }\n\n    case 'SetCityList': return { ...state, CityList: action.payload }\n    case 'SetSendSelectTerminal': return { ...state, SendSelectTerminal: action.payload }\n    case 'SetRecSelectTerminal': return { ...state, RecSelectTerminal: action.payload }\n\n    case 'set_copy_disp_data': \n    \n    const CargoTypeList = [\n      {label:\"Сейф-пакет\", value: \"СейфПакет\"},\n      {label:\"Коробка\", value: \"Коробка\"},\n      {label:\"Контейнер\", value: \"Контейнер\"},\n      {label:\"Мешок под пломбой\", value: \"МешокПодПломбой\"},\n      {label:\"Прочее\", value: \"Прочее\"}\n    ]\n    console.log(action.payload.Cargo)\n    return { ...state, \n    \n      Number: action.payload.Number,\n      PayType: action.payload.PayType,\n      SendAdress: action.payload.SendAdress,\n      SendCompany: action.payload.SendCompany,\n      SendPhone: action.payload.SendPhone,\n      SendPerson: action.payload.SendPerson,\n      SendAddInfo: action.payload.SendAddInfo,\n      SendEmail: action.payload.SendEmail,\n      \n      SendTerminal: action.payload.SendTerminal,\n      // SendSelectTerminal: {},\n      \n      InsureValue: action.payload.InsureValue,\n      COD: action.payload.COD,\n      RecAdress: action.payload.RecAdress,\n      RecCompany: action.payload.RecCompany,\n      RecPhone: action.payload.RecPhone,\n      RecPerson: action.payload. RecPerson,\n      RecAddInfo: action.payload.RecAddInfo,\n      RecEmail: action.payload.RecEmail,\n      \n      RecTerminal: action.payload.RecTerminal,\n      // RecSelectTerminal: {},\n\n      CargoInfoType: action.payload.CargoInfoType,\n\n      Volume: action.payload.Volume, \n      Total: action.payload.Total,\n      Weight: action.payload.Weight,\n      \n      Cargo: action.payload.Cargo.map(el=>{\n        const cargo_type = el.Type\n        const CargoTypeListEl = CargoTypeList.find(el_list => el_list.value === el.Type)\n        console.log(cargo_type)\n        console.log(CargoTypeListEl)\n        return {\n        Weight: el.Weight,\n        L: el.L,\n        W: el.W,\n        H: el.H,\n        Q: el.Q,\n        Type: CargoTypeList.find(el_list => el_list.label === el.Type),\n        Comment: el.Comment\n      }}),\n    }\n\n    default: return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}