{"ast":null,"code":"const today = new Date();\nlet mm = today.getMonth() + 1; // getMonth() is zero-based\n\nlet dd = today.getDate();\nconst y = today.getFullYear();\n\nif (mm < 10) {\n  mm = '0' + mm;\n}\n\nif (dd < 10) {\n  dd = '0' + dd;\n}\n\nconst date = y + '-' + mm + '-' + dd;\nconst initialState = {\n  barcode: '',\n  task_type: '',\n  task_date: '',\n  task_value: '',\n  customer: '',\n  zone_list: [],\n  selected_zone: '',\n  storage: {\n    name: '',\n    id: ''\n  },\n  rec_city: '',\n  rec_name: '',\n  rec_adress: '',\n  rec_district: '',\n  status_type: null,\n  status_message: '',\n  target_date: date,\n  num: '',\n  done_sound: undefined,\n  err_sound: undefined,\n  funk_sound: undefined\n};\nexport default function dispatch(state = initialState, action) {\n  switch (action.type) {\n    case 'storage_reciept_set_barcode':\n      return { ...state,\n        barcode: action.payload,\n        done_sound: undefined,\n        err_sound: undefined,\n        funk_sound: undefined\n      };\n\n    case 'storage_reciept_set_task_type':\n      return { ...state,\n        task_type: action.payload\n      };\n\n    case 'storage_reciept_set_task_date':\n      return { ...state,\n        task_date: action.payload\n      };\n\n    case 'storage_reciept_set_task_value':\n      return { ...state,\n        task_value: action.payload\n      };\n\n    case 'storage_reciept_set_zone_list':\n      return { ...state,\n        zone_list: action.payload\n      };\n\n    case 'storage_reciept_set_selected_zone':\n      return { ...state,\n        selected_zone: action.payload\n      };\n\n    case 'storage_reciept_set_storage':\n      return { ...state,\n        storage: action.payload\n      };\n\n    case 'storage_reciept_set_rec_city':\n      return { ...state,\n        rec_city: action.payload\n      };\n\n    case 'storage_reciept_set_rec_name':\n      return { ...state,\n        rec_name: action.payload\n      };\n\n    case 'storage_reciept_set_rec_adress':\n      return { ...state,\n        rec_adress: action.payload\n      };\n\n    case 'storage_reciept_set_rec_district':\n      return { ...state,\n        rec_district: action.payload\n      };\n\n    case 'storage_reciept_set_status_type':\n      return { ...state,\n        status_type: action.payload\n      };\n\n    case 'storage_reciept_set_status_message':\n      return { ...state,\n        status_message: action.payload\n      };\n\n    case 'storage_reciept_set_result':\n      return { ...state,\n        task_type: action.payload.task_type,\n        task_date: action.payload.task_date,\n        task_value: action.payload.task_value,\n        rec_city: action.payload.rec_city,\n        rec_name: action.payload.rec_name,\n        rec_adress: action.payload.rec_adress,\n        rec_district: action.payload.rec_district,\n        customer: action.payload.customer,\n        status_type: action.payload.status_type,\n        status_message: action.payload.status_message,\n        num: action.payload.num\n      };\n\n    case 'storage_reciept_set_err_sound':\n      return { ...state,\n        err_sound: action.payload\n      };\n\n    case 'storage_reciept_set_done_sound':\n      return { ...state,\n        done_sound: action.payload\n      };\n\n    case 'storage_reciept_set_funk_sound':\n      return { ...state,\n        funk_sound: action.payload\n      };\n\n    case 'storage_reciept_sound_off':\n      return { ...state,\n        done_sound: undefined,\n        err_sound: undefined,\n        funk_sound: undefined\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/saint/ek 3.1/ek-lc-dev/src/reducers/storage_reciept.js"],"names":["today","Date","mm","getMonth","dd","getDate","y","getFullYear","date","initialState","barcode","task_type","task_date","task_value","customer","zone_list","selected_zone","storage","name","id","rec_city","rec_name","rec_adress","rec_district","status_type","status_message","target_date","num","done_sound","undefined","err_sound","funk_sound","dispatch","state","action","type","payload"],"mappings":"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","sourcesContent":["const today = new Date()\n  let mm = today.getMonth() + 1; // getMonth() is zero-based\n  let dd = today.getDate();\n\n  const y = today.getFullYear()\n\n  if (mm<10) { mm = '0' + mm }\n  if (dd<10) {dd = '0' + dd}\n        \n  const date = y+'-'+mm+'-'+dd\n\nconst initialState = {\n  \n  barcode: '',\n  task_type:'',\n  task_date:'',\n  task_value:'',\n  customer:'',\n  zone_list:[],\n  selected_zone:'',\n  storage:{\n    name:'',\n    id:''\n  },\n  rec_city:'',\n  rec_name:'',\n  rec_adress:'',\n  rec_district:'',\n  status_type: null,\n  status_message:'',\n  target_date: date,\n  num:'',\n  done_sound: undefined,\n  err_sound: undefined,\n  funk_sound: undefined,\n\n  \n}\n\nexport default function dispatch (state = initialState, action) {\n  switch (action.type) {\n    case 'storage_reciept_set_barcode': return { ...state, barcode: action.payload, done_sound:undefined, err_sound: undefined, funk_sound:undefined }\n    case 'storage_reciept_set_task_type': return { ...state, task_type: action.payload }\n    case 'storage_reciept_set_task_date': return { ...state, task_date: action.payload }\n    case 'storage_reciept_set_task_value': return { ...state, task_value: action.payload }\n    case 'storage_reciept_set_zone_list': return { ...state, zone_list: action.payload }\n    case 'storage_reciept_set_selected_zone': return { ...state, selected_zone: action.payload }\n    case 'storage_reciept_set_storage': return { ...state, storage: action.payload }\n    case 'storage_reciept_set_rec_city': return { ...state, rec_city: action.payload }\n\n    case 'storage_reciept_set_rec_name': return { ...state, rec_name: action.payload }\n    case 'storage_reciept_set_rec_adress': return { ...state, rec_adress: action.payload }\n    case 'storage_reciept_set_rec_district': return { ...state, rec_district: action.payload }\n    case 'storage_reciept_set_status_type': return { ...state, status_type: action.payload }\n    case 'storage_reciept_set_status_message': return { ...state, status_message: action.payload }\n\n    case 'storage_reciept_set_result': return { \n      ...state, \n      task_type: action.payload.task_type,\n      task_date: action.payload.task_date,\n      task_value: action.payload.task_value,\n      rec_city: action.payload.rec_city,\n      rec_name: action.payload.rec_name,\n      rec_adress: action.payload.rec_adress,\n      rec_district: action.payload.rec_district,\n      customer: action.payload.customer,\n      status_type: action.payload.status_type,\n      status_message: action.payload.status_message,\n      num: action.payload.num\n\n    }\n    case 'storage_reciept_set_err_sound': return { ...state, err_sound: action.payload }\n    case 'storage_reciept_set_done_sound': return { ...state, done_sound: action.payload }\n    case 'storage_reciept_set_funk_sound': return { ...state, funk_sound: action.payload }\n    case 'storage_reciept_sound_off': return { ...state, done_sound: undefined, err_sound: undefined, funk_sound: undefined }\n\n\n    default: return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}