{"ast":null,"code":"var _jsxFileName = \"/home/saint/123/ek-lc-dev/src/m_screen/scanner.js\";\nimport React, { Component } from 'react';\nimport QrReader from 'react-qr-reader';\nimport { connect } from 'react-redux';\n\nclass Screen extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleScan = data => {\n      console.log(this.state.result);\n\n      if (data) {\n        this.setState({\n          result: data\n        });\n      }\n    };\n\n    this.handleError = err => {\n      console.error(err);\n    };\n\n    this.state = {\n      result: 'No result'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(QrReader, {\n      delay: 300,\n      onError: this.handleError,\n      onScan: this.handleScan(result),\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.result));\n  }\n\n}\n\nexport default connect(state => ({\n  store: state\n}), dispatch => ({}))(Screen);","map":{"version":3,"sources":["/home/saint/123/ek-lc-dev/src/m_screen/scanner.js"],"names":["React","Component","QrReader","connect","Screen","constructor","props","context","handleScan","data","console","log","state","result","setState","handleError","err","error","render","width","store","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC3BI,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AACxB,UAAMD,KAAN,EAAaC,OAAb;;AADwB,SAS5BC,UAT4B,GASfC,IAAI,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,MAAvB;;AACA,UAAIJ,IAAJ,EAAU;AACN,aAAKK,QAAL,CAAc;AACVD,UAAAA,MAAM,EAAEJ;AADE,SAAd;AAGH;AACJ,KAhB2B;;AAAA,SAiB5BM,WAjB4B,GAiBdC,GAAG,IAAI;AACjBN,MAAAA,OAAO,CAACO,KAAR,CAAcD,GAAd;AACH,KAnB2B;;AAGxB,SAAKJ,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH;;AAeDK,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAE,GADX;AAEI,MAAA,OAAO,EAAE,KAAKH,WAFlB;AAGI,MAAA,MAAM,EAAE,KAAKP,UAAL,CAAgBK,MAAhB,CAHZ;AAII,MAAA,KAAK,EAAE;AAAEM,QAAAA,KAAK,EAAE;AAAT,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKP,KAAL,CAAWC,MAAf,CARJ,CADJ;AAYH;;AAnC0B;;AAuC/B,eAAeV,OAAO,CACjBS,KAAD,KAAY;AAAEQ,EAAAA,KAAK,EAAER;AAAT,CAAZ,CADkB,EAElBS,QAAQ,KAAK,EAAL,CAFU,CAAP,CAKbjB,MALa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport QrReader from 'react-qr-reader';\nimport { connect } from 'react-redux';\n\nclass Screen extends Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            result: 'No result'\n        }\n    }\n    \n\n    handleScan = data => {\n        console.log(this.state.result)\n        if (data) {\n            this.setState({\n                result: data\n            })\n        }\n    }\n    handleError = err => {\n        console.error(err)\n    }\n\n    render() {\n        return (\n            <div>\n\n                <QrReader\n                    delay={300}\n                    onError={this.handleError}\n                    onScan={this.handleScan(result)}\n                    style={{ width: '100%' }}\n                />\n                <p>{this.state.result}</p>\n            </div>\n        )\n    }\n}\n\n\nexport default connect(\n    (state) => ({ store: state }),\n    dispatch => ({\n        \n    })\n)(Screen);"]},"metadata":{},"sourceType":"module"}