{"ast":null,"code":"var _jsxFileName = \"/home/saint/ek 3.1/ek-lc-dev/src/m_screen/m_disp_template.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { get_data } from '../common/common_modules';\nimport Wait from \"../screen/wait\";\nimport './mobile_disp_template.css';\n\nclass Screen extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.defult_disp = () => {\n      this.props.set_active_window(\"m_create_disp\");\n    };\n\n    this.select_template = item => {\n      const send_city = this.props.store.m_create_disp.CityList.filter(el => el.value == item.send_city)[0];\n      const rec_city = this.props.store.m_create_disp.CityList.filter(el => el.value == item.rec_city)[0];\n      const s_city = {\n        city: item.send_city\n      };\n      const r_city = {\n        city: item.rec_city\n      };\n      get_data('terminallist', s_city).then(result => {\n        const data = {\n          result: result,\n          terminal: null\n        };\n        this.props.SetSendTerminalList(data);\n      }, err => {\n        console.log(\"err\");\n        console.log(err);\n      });\n      get_data('terminallist', r_city).then(result => {\n        const data = {\n          result: result,\n          terminal: null\n        };\n        this.props.SetRecTerminalList(data);\n      }, err => {\n        console.log(\"err\");\n        console.log(err);\n      });\n      let data = {\n        data: item,\n        send_city: send_city,\n        rec_city: rec_city\n      };\n      this.props.set_select_template(data);\n      this.props.set_active_window(\"m_create_disp\");\n    };\n  }\n\n  componentDidMount() {\n    const data = {\n      userkey: this.props.store.login.userkey\n    };\n    this.props.set_active_loader(true);\n    get_data('template', data).then(result => {\n      this.props.set_template_list(result);\n    }, err => {\n      console.log(err);\n    });\n    get_data('citylist').then(result => {\n      this.props.set_active_loader(false);\n      this.props.SetCityList(result);\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, this.props.store.general.active_loader ? /*#__PURE__*/React.createElement(Wait, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 60\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mobile_heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0448\\u0430\\u0431\\u043B\\u043E\\u043D\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mobile_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m_disp_tempalate_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, this.props.store.m_create_disp.template_list.map((item, index) => /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      className: \"m_disp_tempalate_item\",\n      onClick: this.select_template.bind(this, item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 37\n      }\n    }, item.name)), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"m_disp_tempalate_item m_disp_tempalate_item--defult\",\n      onClick: this.defult_disp.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u044C \\u0441\\u0430\\u043C\\u043E\\u043C\\u0443\")))));\n  }\n\n}\n\n;\nexport default connect(state => ({\n  store: state\n}), dispatch => ({\n  SetCityList: param => {\n    dispatch({\n      type: 'SetCityListMobile',\n      payload: param\n    });\n  },\n  set_active_window: param => {\n    dispatch({\n      type: 'set_active_window',\n      payload: param\n    });\n  },\n  set_active_loader: param => {\n    dispatch({\n      type: 'set_active_loader',\n      payload: param\n    });\n  },\n  set_template_list: param => {\n    dispatch({\n      type: 'set_template_list',\n      payload: param\n    });\n  },\n  set_select_template: param => {\n    dispatch({\n      type: 'set_select_template',\n      payload: param\n    });\n  },\n  SetSendTerminalList: param => {\n    dispatch({\n      type: 'SetSendTerminalListMobile',\n      payload: param\n    });\n  },\n  SetRecTerminalList: param => {\n    dispatch({\n      type: 'SetRecTerminalListMobile',\n      payload: param\n    });\n  }\n}))(Screen);","map":{"version":3,"sources":["/home/saint/ek 3.1/ek-lc-dev/src/m_screen/m_disp_template.js"],"names":["React","connect","get_data","Wait","Screen","Component","defult_disp","props","set_active_window","select_template","item","send_city","store","m_create_disp","CityList","filter","el","value","rec_city","s_city","city","r_city","then","result","data","terminal","SetSendTerminalList","err","console","log","SetRecTerminalList","set_select_template","componentDidMount","userkey","login","set_active_loader","set_template_list","SetCityList","render","general","active_loader","template_list","map","index","bind","name","state","dispatch","param","type","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { get_data } from '../common/common_modules';\nimport Wait from \"../screen/wait\";\nimport './mobile_disp_template.css';\n\nclass Screen extends React.Component {\n\n    componentDidMount() {\n        const data = {\n            userkey: this.props.store.login.userkey,\n        }\n        this.props.set_active_loader(true);\n        get_data('template', data).then(\n            (result) => {\n                this.props.set_template_list(result);\n            },\n            (err) => {\n                console.log(err)\n            }\n        )\n\n        get_data('citylist').then(\n            (result) => {\n                this.props.set_active_loader(false);\n                this.props.SetCityList(result);\n            },\n            (err) => { \n                console.log(err) \n            }\n        );\n    }\n\n    defult_disp = () => {\n        this.props.set_active_window(\"m_create_disp\");\n    }\n\n    select_template = (item) => {\n        const send_city = this.props.store.m_create_disp.CityList.filter((el) => el.value == item.send_city)[0];\n        const rec_city = this.props.store.m_create_disp.CityList.filter((el) => el.value == item.rec_city)[0];\n        \n        const s_city = {\n            city: item.send_city,\n        };\n        const r_city = {\n            city: item.rec_city,\n        };\n\n        get_data('terminallist', s_city).then(\n            (result) => {\n                const data = {\n                    result: result,\n                    terminal: null,\n                }\n                this.props.SetSendTerminalList(data);\n            },\n            (err) => {\n                console.log(\"err\");\n                console.log(err);\n            }\n        );\n\n        get_data('terminallist', r_city).then(\n            (result) => {\n                const data = {\n                    result: result,\n                    terminal: null,\n                }\n                this.props.SetRecTerminalList(data);\n            },\n            (err) => {\n                console.log(\"err\");\n                console.log(err);\n            }\n        );\n\n        let data = {\n            data: item,\n            send_city: send_city,\n            rec_city: rec_city,\n        }\n        this.props.set_select_template(data);\n        this.props.set_active_window(\"m_create_disp\");\n    }\n\n    render() {\n\n        return (\n            <div>\n                {this.props.store.general.active_loader ? (<Wait />) : (\n                    <div>\n                        <div className=\"mobile_heading\">\n                            Выбрать шаблон\n                        </div>\n                        <div className=\"mobile_container\">\n                            <div className=\"m_disp_tempalate_container\">\n                                {this.props.store.m_create_disp.template_list.map((item, index) => \n                                    <button key={index} className=\"m_disp_tempalate_item\" onClick={this.select_template.bind(this, item)}>\n                                        {item.name}\n                                    </button>\n                                )}\n                                <button className=\"m_disp_tempalate_item m_disp_tempalate_item--defult\" onClick={this.defult_disp.bind(this)}>\n                                    Заполнить самому\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        )\n    }\n};\n\n\nexport default connect(\n    state => ({\n        store: state\n    }),\n    dispatch => ({\n        SetCityList: (param) => { dispatch({ type: 'SetCityListMobile', payload: param }) },\n        set_active_window: (param) => { dispatch({ type: 'set_active_window', payload: param }); },\n        set_active_loader: (param) => { dispatch({ type: 'set_active_loader', payload: param }); },\n        set_template_list: (param) => { dispatch({ type: 'set_template_list', payload: param }); },\n        set_select_template: (param) => { dispatch({ type: 'set_select_template', payload: param }); },\n        SetSendTerminalList: (param) => { dispatch({ type: 'SetSendTerminalListMobile', payload: param }) },\n        SetRecTerminalList: (param) => { dispatch({ type: 'SetRecTerminalListMobile', payload: param }) },\n    })\n)(Screen);"]},"metadata":{},"sourceType":"module"}