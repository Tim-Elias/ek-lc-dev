{"ast":null,"code":"const initialState = {\n  action: null,\n  data: {}\n};\nexport default function dispatch(state = initialState, action) {\n  switch (action.type) {\n    case 'set_data_manifest':\n      return { ...state,\n        data: action.payload\n      };\n\n    case 'set_action_manifest':\n      return { ...state,\n        action: action.payload\n      };\n\n    case 'check_manifest_disp':\n      return { ...state,\n        data: { ...state.data,\n          dispatches: state.data.dispatches.map(el => {\n            if (el.num === action.payload) {\n              return { ...el,\n                selected: !el.selected\n              };\n            } else {\n              return el;\n            }\n          })\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/elias/Documents/ek-lc-dev-1/ek-lc-dev/src/reducers/manifest.js"],"names":["initialState","action","data","dispatch","state","type","payload","dispatches","map","el","num","selected"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AAEnBC,EAAAA,MAAM,EAAE,IAFW;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;AAOA,eAAe,SAASC,QAAT,CAAmBC,KAAK,GAAGJ,YAA3B,EAAyCC,MAAzC,EAAiD;AAC9D,UAAQA,MAAM,CAACI,IAAf;AACE,SAAK,mBAAL;AAA0B,aAAO,EAAE,GAAGD,KAAL;AAAYF,QAAAA,IAAI,EAAED,MAAM,CAACK;AAAzB,OAAP;;AAC1B,SAAK,qBAAL;AAA4B,aAAO,EAAE,GAAGF,KAAL;AAAYH,QAAAA,MAAM,EAAEA,MAAM,CAACK;AAA3B,OAAP;;AAC5B,SAAK,qBAAL;AAA4B,aAAO,EACjC,GAAGF,KAD8B;AAEjCF,QAAAA,IAAI,EAAE,EACJ,GAAGE,KAAK,CAACF,IADL;AAEJK,UAAAA,UAAU,EAAEH,KAAK,CAACF,IAAN,CAAWK,UAAX,CAAsBC,GAAtB,CAA2BC,EAAD,IAAQ;AAC5C,gBAAIA,EAAE,CAACC,GAAH,KAAWT,MAAM,CAACK,OAAtB,EAA+B;AAC7B,qBAAO,EAAE,GAAGG,EAAL;AAASE,gBAAAA,QAAQ,EAAE,CAACF,EAAE,CAACE;AAAvB,eAAP;AACD,aAFD,MAEO;AACL,qBAAOF,EAAP;AACD;AACF,WANW;AAFR;AAF2B,OAAP;;AAc5B;AAAS,aAAOL,KAAP;AAjBX;AAmBD","sourcesContent":["const initialState = {\n\n  action: null,\n  data: {}\n\n}\n\nexport default function dispatch (state = initialState, action) {\n  switch (action.type) {\n    case 'set_data_manifest': return { ...state, data: action.payload }\n    case 'set_action_manifest': return { ...state, action: action.payload }\n    case 'check_manifest_disp': return {\n      ...state,\n      data: {\n        ...state.data,\n        dispatches: state.data.dispatches.map((el) => {\n          if (el.num === action.payload) {\n            return { ...el, selected: !el.selected }\n          } else {\n            return el\n          }\n        })\n      }\n    }\n\n    default: return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}