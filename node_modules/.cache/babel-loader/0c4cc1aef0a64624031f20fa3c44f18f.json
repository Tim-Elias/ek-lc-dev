{"ast":null,"code":"var _jsxFileName = \"/home/saint/123/ek-lc-dev/src/m_screen/scanner.js\";\nimport React, { Component } from 'react';\nimport QrReader from 'react-qr-reader';\nimport BarcodeReader from 'react-barcode-reader';\nimport { connect } from 'react-redux';\n\nclass Screen extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleScan = data => {\n      console.log(data);\n\n      if (data) {\n        this.setState({\n          result: data\n        });\n      }\n    };\n\n    this.handleError = err => {\n      console.error(err);\n    };\n\n    this.state = {\n      result: 'No result'\n    };\n    this.handleScan = this.handleScan.bind(this);\n  }\n\n  render() {\n    if (BarcodeReader) {\n      alert(\"qweqweqweq\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(BarcodeReader, {\n      onError: this.handleError,\n      onScan: this.handleScan,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.result));\n  }\n\n}\n\nexport default connect(state => ({\n  store: state\n}), dispatch => ({}))(Screen);","map":{"version":3,"sources":["/home/saint/123/ek-lc-dev/src/m_screen/scanner.js"],"names":["React","Component","QrReader","BarcodeReader","connect","Screen","constructor","props","context","handleScan","data","console","log","setState","result","handleError","err","error","state","bind","render","alert","store","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAC3BK,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AACxB,UAAMD,KAAN,EAAaC,OAAb;;AADwB,SAU5BC,UAV4B,GAUfC,IAAI,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAIA,IAAJ,EAAU;AACN,aAAKG,QAAL,CAAc;AACVC,UAAAA,MAAM,EAAEJ;AADE,SAAd;AAGH;AACJ,KAjB2B;;AAAA,SAkB5BK,WAlB4B,GAkBdC,GAAG,IAAI;AACjBL,MAAAA,OAAO,CAACM,KAAR,CAAcD,GAAd;AACH,KApB2B;;AAGxB,SAAKE,KAAL,GAAa;AACTJ,MAAAA,MAAM,EAAE;AADC,KAAb;AAIA,SAAKL,UAAL,GAAkB,KAAKA,UAAL,CAAgBU,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAcDC,EAAAA,MAAM,GAAG;AACL,QAAIjB,aAAJ,EAAmB;AACfkB,MAAAA,KAAK,CAAC,YAAD,CAAL;AACH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQI,oBAAC,aAAD;AACI,MAAA,OAAO,EAAE,KAAKN,WADlB;AAEI,MAAA,MAAM,EAAE,KAAKN,UAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKS,KAAL,CAAWJ,MAAf,CAZJ,CADJ;AAgBH;;AA3C0B;;AA+C/B,eAAeV,OAAO,CACjBc,KAAD,KAAY;AAAEI,EAAAA,KAAK,EAAEJ;AAAT,CAAZ,CADkB,EAElBK,QAAQ,KAAK,EAAL,CAFU,CAAP,CAKblB,MALa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport QrReader from 'react-qr-reader';\nimport BarcodeReader from 'react-barcode-reader';\nimport { connect } from 'react-redux';\n\nclass Screen extends Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            result: 'No result'\n        }\n\n        this.handleScan = this.handleScan.bind(this)\n    }\n    \n    handleScan = data => {\n        console.log(data);\n        if (data) {\n            this.setState({\n                result: data\n            })\n        }\n    }\n    handleError = err => {\n        console.error(err)\n    }\n\n    render() {\n        if (BarcodeReader) {\n            alert(\"qweqweqweq\");\n        }\n        return (\n            <div>\n\n                {/* <QrReader\n                    delay={300}\n                    onError={this.handleError}\n                    onScan={this.handleScan}\n                    style={{ width: '100%' }}\n                /> */}\n                <BarcodeReader\n                    onError={this.handleError}\n                    onScan={this.handleScan}\n                />\n                <p>{this.state.result}</p>\n            </div>\n        )\n    }\n}\n\n\nexport default connect(\n    (state) => ({ store: state }),\n    dispatch => ({\n        \n    })\n)(Screen);"]},"metadata":{},"sourceType":"module"}