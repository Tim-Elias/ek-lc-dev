{"ast":null,"code":"const initialState = {\n  Number: \"\",\n  PayType: \"БезналичнаяОплата\",\n  CargoInfoType: false,\n  CityList: [],\n  DelMethod: 'Дверь - Дверь',\n  Customer: \"\",\n  Price: 0,\n  SendCity: '',\n  SendAdress: '',\n  SendCompany: '',\n  SendPhone: '',\n  SendPerson: '',\n  SendAddInfo: '',\n  SendTerminal: false,\n  SendSelectTerminal: {},\n  SendTerminalList: [],\n  RecCity: '',\n  RecAdress: '',\n  RecCompany: '',\n  RecPhone: '',\n  RecPerson: '',\n  RecAddInfo: '',\n  RecTerminal: false,\n  RecSelectTerminal: {},\n  RecTerminalList: [],\n  Cargo: [],\n  Total: \"0\",\n  Weight: \"0\",\n  Volume: \"0\",\n  COD: \"0\",\n  InsureValue: \"0\",\n  popup: false,\n  popupType: \"\",\n  template_list: [],\n  Cargo_list: []\n};\nexport default function dispatch(state = initialState, action) {\n  switch (action.type) {\n    case 'set_Customer':\n      return { ...state,\n        Customer: action.payload\n      };\n\n    case 'set_Cargo_list_quantity':\n      return { ...state,\n        Cargo_list: state.Cargo_list.map((item, index) => {\n          if (action.payload.name == item.name) {\n            return { ...item,\n              quantity: action.payload.quantity\n            };\n          } else {\n            return item;\n          }\n        })\n      };\n\n    case 'set_Cargo_list':\n      return { ...state,\n        Cargo_list: action.payload\n      };\n\n    case 'set_Number':\n      return { ...state,\n        Number: action.payload\n      };\n\n    case 'set_popup':\n      return { ...state,\n        popup: action.payload\n      };\n\n    case 'set_popup_type':\n      return { ...state,\n        popupType: action.payload\n      };\n\n    case 'SetRecAdressMobile':\n      return { ...state,\n        RecAdress: action.payload\n      };\n\n    case 'SetRecCompanyMobile':\n      return { ...state,\n        RecCompany: action.payload\n      };\n\n    case 'SetRecPhoneMobile':\n      return { ...state,\n        RecPhone: action.payload\n      };\n\n    case 'SetRecPersonMobile':\n      return { ...state,\n        RecPerson: action.payload\n      };\n\n    case 'SetRecAddInfoMobile':\n      return { ...state,\n        RecAddInfo: action.payload\n      };\n\n    case 'SetSendAdressMobile':\n      return { ...state,\n        SendAdress: action.payload\n      };\n\n    case 'SetSendCompanyMobile':\n      return { ...state,\n        SendCompany: action.payload\n      };\n\n    case 'SetSendPhoneMobile':\n      return { ...state,\n        SendPhone: action.payload\n      };\n\n    case 'SetSendPersonMobile':\n      return { ...state,\n        SendPerson: action.payload\n      };\n\n    case 'SetSendAddInfoMobile':\n      return { ...state,\n        SendAddInfo: action.payload\n      };\n\n    case 'SetPriceMobile':\n      return { ...state,\n        Price: action.payload\n      };\n\n    case 'SetTotalMobile':\n      return { ...state,\n        Total: action.payload\n      };\n\n    case 'SetWeightMobile':\n      return { ...state,\n        Weight: action.payload\n      };\n\n    case 'SetVolumeMobile':\n      return { ...state,\n        Volume: action.payload\n      };\n\n    case 'SetCODMobile':\n      return { ...state,\n        COD: action.payload\n      };\n\n    case 'SetInsureValueMobile':\n      return { ...state,\n        InsureValue: action.payload\n      };\n\n    case 'SetCargoWeightMobile':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              Weight: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoLMobile':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              L: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoWMobile':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              W: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoHMobile':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              H: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoTypeMobile':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              Type: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'SetCargoCommMobile':\n      return { ...state,\n        Cargo: state.Cargo.map((el, index) => {\n          if (index == action.payload.index) {\n            return { ...el,\n              Comment: action.payload.value\n            };\n          } else {\n            return el;\n          }\n        })\n      };\n\n    case 'AddCargoMobile':\n      state.Cargo.push({\n        Weight: action.payload.Weight,\n        L: action.payload.L,\n        W: action.payload.W,\n        H: action.payload.H,\n        Q: 1,\n        Type: action.payload.Type,\n        Comment: action.payload.Comment,\n        Template: action.payload.Template\n      });\n      return { ...state,\n        Cargo: state.Cargo\n      };\n\n    case 'RemoveCargoMobile':\n      return { ...state,\n        Cargo: state.Cargo.filter((el, index) => {\n          return index !== action.payload;\n        })\n      };\n\n    case 'SetSendCityMobile':\n      return { ...state,\n        SendCity: action.payload\n      };\n\n    case 'SetRecCityMobile':\n      return { ...state,\n        RecCity: action.payload\n      };\n\n    case 'SetPayTypeMobile':\n      return { ...state,\n        PayType: action.payload\n      };\n\n    case 'SetCargoInfoTypeMobile':\n      if (action.payload === \"true\") {\n        return { ...state,\n          CargoInfoType: true,\n          Cargo: [],\n          Total: \"0\",\n          Weight: \"0\",\n          Volume: \"0\",\n          COD: \"0\",\n          InsureValue: \"0\"\n        };\n      } else {\n        return { ...state,\n          CargoInfoType: false,\n          Total: \"0\",\n          Weight: \"0\",\n          Volume: \"0\",\n          COD: \"0\",\n          InsureValue: \"0\"\n        };\n      }\n\n    case 'SetCityListMobile':\n      return { ...state,\n        CityList: action.payload\n      };\n\n    case 'SetSendTerminalMobile':\n      return { ...state,\n        SendTerminal: action.payload.SendTerminal,\n        DelMethod: action.payload.DelMethod\n      };\n\n    case 'SetSendTerminalListMobile':\n      if (action.payload.result.length == 0) {\n        return { ...state,\n          SendTerminalList: action.payload.result\n        };\n      } else if (action.payload.terminal) {\n        return { ...state,\n          SendTerminalList: action.payload.result,\n          SendSelectTerminal: action.payload.terminal[0]\n        };\n      } else {\n        return { ...state,\n          SendTerminalList: action.payload.result,\n          SendSelectTerminal: action.payload.result[0]\n        };\n      }\n\n      ;\n\n    case 'SetSendSelectTerminalMobile':\n      return { ...state,\n        SendSelectTerminal: action.payload\n      };\n\n    case 'SetRecTerminalMobile':\n      return { ...state,\n        RecTerminal: action.payload.RecTerminal,\n        DelMethod: action.payload.DelMethod\n      };\n\n    case 'SetRecTerminalListMobile':\n      if (action.payload.result.length == 0) {\n        return { ...state,\n          RecTerminalList: action.payload.result\n        };\n      } else if (action.payload.terminal) {\n        return { ...state,\n          RecTerminalList: action.payload.result,\n          RecSelectTerminal: action.payload.terminal[0]\n        };\n      } else {\n        return { ...state,\n          RecTerminalList: action.payload.result,\n          RecSelectTerminal: action.payload.result[0]\n        };\n      }\n\n      ;\n\n    case 'SetRecSelectTerminalMobile':\n      return { ...state,\n        RecSelectTerminal: action.payload\n      };\n\n    case 'DischargeData':\n      return { ...state,\n        Number: \"\",\n        PayType: \"БезналичнаяОплата\",\n        CargoInfoType: false,\n        CityList: [],\n        DelMethod: 'Дверь - Дверь',\n        Price: 0,\n        Customer: \"\",\n        SendCity: '',\n        SendAdress: '',\n        SendCompany: '',\n        SendPhone: '',\n        SendPerson: '',\n        SendAddInfo: '',\n        SendTerminal: false,\n        SendSelectTerminal: {},\n        SendTerminalList: [],\n        RecCity: '',\n        RecAdress: '',\n        RecCompany: '',\n        RecPhone: '',\n        RecPerson: '',\n        RecAddInfo: '',\n        RecTerminal: false,\n        RecSelectTerminal: {},\n        RecTerminalList: [],\n        Cargo: [],\n        Total: \"0\",\n        Weight: \"0\",\n        Volume: \"0\",\n        COD: \"0\",\n        InsureValue: \"0\",\n        popup: false,\n        popupType: \"\",\n        Cargo_list: []\n      };\n\n    case 'set_template_list':\n      return { ...state,\n        template_list: action.payload\n      };\n\n    case 'set_select_template':\n      const CargoTypeList = [{\n        label: \"Сейф-пакет\",\n        value: \"СейфПакет\"\n      }, {\n        label: \"Коробка\",\n        value: \"Коробка\"\n      }, {\n        label: \"Контейнер\",\n        value: \"Контейнер\"\n      }, {\n        label: \"Мешок под пломбой\",\n        value: \"МешокПодПломбой\"\n      }, {\n        label: \"Прочее\",\n        value: \"Прочее\"\n      }];\n      let delivery_method = action.payload.data.del_method.split(\"-\");\n      let send_teminal, rec_terminal;\n\n      if (delivery_method[0] == \"Склад\") {\n        send_teminal = true;\n      } else {\n        send_teminal = false;\n      }\n\n      if (delivery_method[1] == \"Склад\") {\n        rec_terminal = true;\n      } else {\n        rec_terminal = false;\n      }\n\n      return { ...state,\n        DelMethod: action.payload.data.del_method,\n        PayType: action.payload.data.pay_type,\n        Customer: action.payload.data.customer,\n        SendCity: action.payload.send_city,\n        // Number: action.payload.Number,\n        SendAdress: action.payload.data.send_address,\n        SendCompany: action.payload.data.send_company,\n        SendPhone: action.payload.data.send_phone,\n        SendPerson: action.payload.data.send_person,\n        SendAddInfo: action.payload.data.send_addinfo,\n        // SendEmail: action.payload.SendEmail,\n        SendTerminal: send_teminal,\n        RecCity: action.payload.rec_city,\n        RecAdress: action.payload.data.rec_address,\n        RecCompany: action.payload.data.rec_company,\n        RecPhone: action.payload.data.rec_phone,\n        RecPerson: action.payload.data.rec_person,\n        RecAddInfo: action.payload.data.rec_addinfo,\n        // RecEmail: action.payload.RecEmail,\n        RecTerminal: rec_terminal\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/saint/ek 3.1/ek-lc-dev/src/reducers/m_create_disp.js"],"names":["initialState","Number","PayType","CargoInfoType","CityList","DelMethod","Customer","Price","SendCity","SendAdress","SendCompany","SendPhone","SendPerson","SendAddInfo","SendTerminal","SendSelectTerminal","SendTerminalList","RecCity","RecAdress","RecCompany","RecPhone","RecPerson","RecAddInfo","RecTerminal","RecSelectTerminal","RecTerminalList","Cargo","Total","Weight","Volume","COD","InsureValue","popup","popupType","template_list","Cargo_list","dispatch","state","action","type","payload","map","item","index","name","quantity","el","value","L","W","H","Type","Comment","push","Q","Template","filter","result","length","terminal","CargoTypeList","label","delivery_method","data","del_method","split","send_teminal","rec_terminal","pay_type","customer","send_city","send_address","send_company","send_phone","send_person","send_addinfo","rec_city","rec_address","rec_company","rec_phone","rec_person","rec_addinfo"],"mappings":"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","sourcesContent":["const initialState = {\n    Number: \"\",\n\n    PayType: \"БезналичнаяОплата\",\n    CargoInfoType: false,\n    CityList: [],\n    DelMethod: 'Дверь - Дверь',\n    Customer: \"\",\n    Price: 0,\n\n    SendCity: '',\n    SendAdress: '',\n    SendCompany: '',\n    SendPhone: '',\n    SendPerson: '',\n    SendAddInfo: '',\n    SendTerminal: false,\n    SendSelectTerminal: {},\n    SendTerminalList: [],\n\n    RecCity: '',\n    RecAdress: '',\n    RecCompany: '',\n    RecPhone: '',\n    RecPerson: '',\n    RecAddInfo: '',\n    RecTerminal: false,\n    RecSelectTerminal: {},\n    RecTerminalList: [],\n\n    Cargo: [],\n\n    Total: \"0\",\n    Weight: \"0\",\n    Volume: \"0\",\n    COD: \"0\",\n    InsureValue: \"0\",\n\n    popup: false,\n    popupType: \"\",\n\n    template_list: [],\n\n    Cargo_list: [],\n}\n\nexport default function dispatch(state = initialState, action) {\n    switch (action.type) {\n\n        case 'set_Customer': return { ...state, Customer: action.payload }\n\n        case 'set_Cargo_list_quantity': return {\n            ...state,\n            Cargo_list: state.Cargo_list.map((item, index) => {\n                if (action.payload.name == item.name) {\n                    return { ...item, quantity: action.payload.quantity }\n                } else {\n                    return item\n                }\n            })\n        }\n        \n        case 'set_Cargo_list': return { ...state, Cargo_list: action.payload }\n        case 'set_Number': return { ...state, Number: action.payload }\n\n        case 'set_popup': return { ...state, popup: action.payload }\n        case 'set_popup_type': return { ...state, popupType: action.payload }\n\n        case 'SetRecAdressMobile': return { ...state, RecAdress: action.payload }\n        case 'SetRecCompanyMobile': return { ...state, RecCompany: action.payload }\n        case 'SetRecPhoneMobile': return { ...state, RecPhone: action.payload }\n        case 'SetRecPersonMobile': return { ...state, RecPerson: action.payload }\n        case 'SetRecAddInfoMobile': return { ...state, RecAddInfo: action.payload }\n\n        case 'SetSendAdressMobile': return { ...state, SendAdress: action.payload }\n        case 'SetSendCompanyMobile': return { ...state, SendCompany: action.payload }\n        case 'SetSendPhoneMobile': return { ...state, SendPhone: action.payload }\n        case 'SetSendPersonMobile': return { ...state, SendPerson: action.payload }\n        case 'SetSendAddInfoMobile': return { ...state, SendAddInfo: action.payload }\n    \n        case 'SetPriceMobile': return { ...state, Price: action.payload }\n\n        case 'SetTotalMobile': return { ...state, Total: action.payload }\n        case 'SetWeightMobile': return { ...state, Weight: action.payload }\n        case 'SetVolumeMobile': return { ...state, Volume: action.payload }\n        case 'SetCODMobile': return { ...state, COD: action.payload }\n        case 'SetInsureValueMobile': return { ...state, InsureValue: action.payload }\n\n        case 'SetCargoWeightMobile': return {\n            ...state,\n            Cargo: state.Cargo.map((el, index) => {\n                if (index == action.payload.index) {\n                    return { ...el, Weight: action.payload.value }\n                } else {\n                    return el\n                }\n            })\n        }\n        case 'SetCargoLMobile': return {\n            ...state,\n            Cargo: state.Cargo.map((el, index) => {\n                if (index == action.payload.index) {\n                    return { ...el, L: action.payload.value }\n                } else {\n                    return el\n                }\n            })\n        }\n        case 'SetCargoWMobile': return {\n            ...state,\n            Cargo: state.Cargo.map((el, index) => {\n                if (index == action.payload.index) {\n                    return { ...el, W: action.payload.value }\n                } else {\n                    return el\n                }\n            })\n        }\n        case 'SetCargoHMobile': return {\n            ...state,\n            Cargo: state.Cargo.map((el, index) => {\n                if (index == action.payload.index) {\n                    return { ...el, H: action.payload.value }\n                } else {\n                    return el\n                }\n            })\n        }\n        case 'SetCargoTypeMobile': return {\n            ...state,\n            Cargo: state.Cargo.map((el, index) => {\n                if (index == action.payload.index) {\n                    return { ...el, Type: action.payload.value }\n                } else {\n                    return el\n                }\n            })\n        }\n        case 'SetCargoCommMobile': return {\n            ...state,\n            Cargo: state.Cargo.map((el, index) => {\n                if (index == action.payload.index) {\n                    return { ...el, Comment: action.payload.value }\n                } else {\n                    return el\n                }\n            })\n        }\n\n        case 'AddCargoMobile':\n\n            state.Cargo.push({\n\n                Weight: action.payload.Weight,\n                L: action.payload.L,\n                W: action.payload.W,\n                H: action.payload.H,\n\n                Q: 1,\n\n                Type: action.payload.Type,\n                Comment: action.payload.Comment,\n                Template: action.payload.Template,\n            })\n\n            return { ...state, Cargo: state.Cargo }\n\n        case 'RemoveCargoMobile': return {\n            ...state,\n            Cargo: state.Cargo.filter((el, index) => {\n                return index !== action.payload\n            })\n        }\n\n        case 'SetSendCityMobile': return { ...state, SendCity: action.payload }\n\n        case 'SetRecCityMobile': return { ...state, RecCity: action.payload }\n\n        case 'SetPayTypeMobile': return { ...state, PayType: action.payload }\n\n        case 'SetCargoInfoTypeMobile': if (action.payload === \"true\") {\n            return {\n                ...state, CargoInfoType: true, Cargo: [], Total: \"0\", Weight: \"0\", Volume: \"0\", COD: \"0\", InsureValue: \"0\" }\n        } else {\n            return { ...state, CargoInfoType: false, Total: \"0\", Weight: \"0\", Volume: \"0\", COD: \"0\", InsureValue: \"0\" }\n        }\n\n        case 'SetCityListMobile': return { ...state, CityList: action.payload }\n\n        case 'SetSendTerminalMobile': return { ...state, SendTerminal: action.payload.SendTerminal, DelMethod: action.payload.DelMethod }\n        case 'SetSendTerminalListMobile': if (action.payload.result.length == 0 ) {\n            return { ...state, SendTerminalList: action.payload.result }\n        } else if ( action.payload.terminal ) {\n            return { ...state, SendTerminalList: action.payload.result, SendSelectTerminal: action.payload.terminal[0] }\n        } else {\n            return { ...state, SendTerminalList: action.payload.result, SendSelectTerminal: action.payload.result[0] }\n        };\n        case 'SetSendSelectTerminalMobile': return { ...state, SendSelectTerminal: action.payload }\n\n        case 'SetRecTerminalMobile': return { ...state, RecTerminal: action.payload.RecTerminal, DelMethod: action.payload.DelMethod }\n        case 'SetRecTerminalListMobile': if (action.payload.result.length == 0) {\n            return { ...state, RecTerminalList: action.payload.result }\n        } else if (action.payload.terminal) {\n            return { ...state, RecTerminalList: action.payload.result, RecSelectTerminal: action.payload.terminal[0] }\n        } else {\n            return { ...state, RecTerminalList: action.payload.result, RecSelectTerminal: action.payload.result[0] }\n        };\n        case 'SetRecSelectTerminalMobile': return { ...state, RecSelectTerminal: action.payload }\n\n        case 'DischargeData': return { ...state, \n            Number: \"\",\n            PayType: \"БезналичнаяОплата\",\n            CargoInfoType: false,\n            CityList: [],\n            DelMethod: 'Дверь - Дверь',\n            Price: 0,\n            Customer: \"\",\n\n            SendCity: '',\n            SendAdress: '',\n            SendCompany: '',\n            SendPhone: '',\n            SendPerson: '',\n            SendAddInfo: '',\n            SendTerminal: false,\n            SendSelectTerminal: {},\n            SendTerminalList: [],\n\n            RecCity: '',\n            RecAdress: '',\n            RecCompany: '',\n            RecPhone: '',\n            RecPerson: '',\n            RecAddInfo: '',\n            RecTerminal: false,\n            RecSelectTerminal: {},\n            RecTerminalList: [],\n\n            Cargo: [],\n\n            Total: \"0\",\n            Weight: \"0\",\n            Volume: \"0\",\n            COD: \"0\",\n            InsureValue: \"0\",\n\n            popup: false,\n            popupType: \"\",\n\n            Cargo_list: [],\n        }\n\n        case 'set_template_list': return { ...state, template_list: action.payload }\n        case 'set_select_template':\n\n            const CargoTypeList = [\n                { label: \"Сейф-пакет\", value: \"СейфПакет\" },\n                { label: \"Коробка\", value: \"Коробка\" },\n                { label: \"Контейнер\", value: \"Контейнер\" },\n                { label: \"Мешок под пломбой\", value: \"МешокПодПломбой\" },\n                { label: \"Прочее\", value: \"Прочее\" }\n            ]\n\n            let delivery_method = action.payload.data.del_method.split(\"-\");\n            let send_teminal, rec_terminal;\n            if (delivery_method[0] == \"Склад\") {\n                send_teminal = true;\n            } else {\n                send_teminal = false;\n            }\n\n            if(delivery_method[1] == \"Склад\") {\n                rec_terminal = true;\n            } else {\n                rec_terminal = false;\n            }\n\n\n\n            return {\n                ...state,\n                DelMethod: action.payload.data.del_method,\n                PayType: action.payload.data.pay_type,\n                Customer: action.payload.data.customer,\n\n                SendCity: action.payload.send_city,\n                // Number: action.payload.Number,\n                SendAdress: action.payload.data.send_address,\n                SendCompany: action.payload.data.send_company,\n                SendPhone: action.payload.data.send_phone,\n                SendPerson: action.payload.data.send_person,\n                SendAddInfo: action.payload.data.send_addinfo,\n                // SendEmail: action.payload.SendEmail,\n                \n                SendTerminal: send_teminal,\n\n                RecCity: action.payload.rec_city,\n                RecAdress: action.payload.data.rec_address,\n                RecCompany: action.payload.data.rec_company,\n                RecPhone: action.payload.data.rec_phone,\n                RecPerson: action.payload.data.rec_person,\n                RecAddInfo: action.payload.data.rec_addinfo,\n                // RecEmail: action.payload.RecEmail,\n\n                RecTerminal: rec_terminal,\n            }\n\n        default: return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}