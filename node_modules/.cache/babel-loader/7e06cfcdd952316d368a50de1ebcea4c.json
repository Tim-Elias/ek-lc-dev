{"ast":null,"code":"var _jsxFileName = \"/home/saint/123/ek-lc-dev/src/m_screen/scanner.js\";\nimport React, { Component } from 'react';\nimport QrReader from 'react-qr-reader';\nimport { connect } from 'react-redux';\n\nclass Test extends Component {\n  constructor(...args) {\n    super(...args);\n    this.Screen = {\n      result: 'No result'\n    };\n\n    this.handleScan = data => {\n      if (data) {\n        this.setState({\n          result: data\n        });\n      }\n    };\n\n    this.handleError = err => {\n      console.error(err);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(QrReader, {\n      delay: 300,\n      onError: this.handleError,\n      onScan: this.handleScan,\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.state.result));\n  }\n\n}\n\nexport default connect(state => ({\n  store: state\n}), dispatch => ({}))(Screen);","map":{"version":3,"sources":["/home/saint/123/ek-lc-dev/src/m_screen/scanner.js"],"names":["React","Component","QrReader","connect","Test","Screen","result","handleScan","data","setState","handleError","err","console","error","render","width","state","store","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBI,MADyB,GAChB;AACLC,MAAAA,MAAM,EAAE;AADH,KADgB;;AAAA,SAKzBC,UALyB,GAKZC,IAAI,IAAI;AACjB,UAAIA,IAAJ,EAAU;AACN,aAAKC,QAAL,CAAc;AACVH,UAAAA,MAAM,EAAEE;AADE,SAAd;AAGH;AACJ,KAXwB;;AAAA,SAYzBE,WAZyB,GAYXC,GAAG,IAAI;AACjBC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,KAdwB;AAAA;;AAezBG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAE,GADX;AAEI,MAAA,OAAO,EAAE,KAAKJ,WAFlB;AAGI,MAAA,MAAM,EAAE,KAAKH,UAHjB;AAII,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKC,KAAL,CAAWV,MAAf,CAPJ,CADJ;AAWH;;AA3BwB;;AA+B7B,eAAeH,OAAO,CACjBa,KAAD,KAAY;AAAEC,EAAAA,KAAK,EAAED;AAAT,CAAZ,CADkB,EAElBE,QAAQ,KAAK,EAAL,CAFU,CAAP,CAKbb,MALa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport QrReader from 'react-qr-reader';\nimport { connect } from 'react-redux';\n\nclass Test extends Component {\n    Screen = {\n        result: 'No result'\n    }\n\n    handleScan = data => {\n        if (data) {\n            this.setState({\n                result: data\n            })\n        }\n    }\n    handleError = err => {\n        console.error(err)\n    }\n    render() {\n        return (\n            <div>\n                <QrReader\n                    delay={300}\n                    onError={this.handleError}\n                    onScan={this.handleScan}\n                    style={{ width: '100%' }}\n                />\n                <p>{this.state.result}</p>\n            </div>\n        )\n    }\n}\n\n\nexport default connect(\n    (state) => ({ store: state }),\n    dispatch => ({\n        \n    })\n)(Screen);"]},"metadata":{},"sourceType":"module"}