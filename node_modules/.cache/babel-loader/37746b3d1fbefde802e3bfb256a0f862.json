{"ast":null,"code":"const initialState = {\n  search: '',\n  list: [],\n  active: null\n};\nexport default function dispatch(state = initialState, action) {\n  switch (action.type) {\n    case 'select_disp':\n      return { ...state,\n        list: [...state.list.map(el => {\n          if (el.Number === action.payload) {\n            return { ...el,\n              selected: true\n            };\n          } else {\n            return el;\n          }\n        })]\n      };\n\n    case 'set_list_storage':\n      return { ...state,\n        list: action.payload\n      };\n\n    case 'set_search_storagre':\n      return { ...state,\n        search: action.payload\n      };\n\n    case 'set_active_storage':\n      return { ...state,\n        active: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/elias/Documents/ek-lc-dev/src/reducers/storage.js"],"names":["initialState","search","list","active","dispatch","state","action","type","map","el","Number","payload","selected"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,MAAM,EAAE;AAHW,CAArB;AAOA,eAAe,SAASC,QAAT,CAAmBC,KAAK,GAAGL,YAA3B,EAAyCM,MAAzC,EAAiD;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AAAoB,aAAO,EAAE,GAAGF,KAAL;AAAYH,QAAAA,IAAI,EAAE,CAAC,GAAGG,KAAK,CAACH,IAAN,CAAWM,GAAX,CAAgBC,EAAD,IAAQ;AAAE,cAAIA,EAAE,CAACC,MAAH,KAAcJ,MAAM,CAACK,OAAzB,EAAkC;AAAE,mBAAO,EAAE,GAAGF,EAAL;AAASG,cAAAA,QAAQ,EAAE;AAAnB,aAAP;AAAkC,WAAtE,MAA4E;AAAE,mBAAOH,EAAP;AAAW;AAAE,SAApH,CAAJ;AAAlB,OAAP;;AACpB,SAAK,kBAAL;AAAyB,aAAO,EAAE,GAAGJ,KAAL;AAAYH,QAAAA,IAAI,EAAEI,MAAM,CAACK;AAAzB,OAAP;;AACzB,SAAK,qBAAL;AAA4B,aAAO,EAAE,GAAGN,KAAL;AAAYJ,QAAAA,MAAM,EAAEK,MAAM,CAACK;AAA3B,OAAP;;AAC5B,SAAK,oBAAL;AAA2B,aAAO,EAAE,GAAGN,KAAL;AAAYF,QAAAA,MAAM,EAAEG,MAAM,CAACK;AAA3B,OAAP;;AAC3B;AAAS,aAAON,KAAP;AALX;AAOD","sourcesContent":["const initialState = {\n  search: '',\n  list: [],\n  active: null\n\n}\n\nexport default function dispatch (state = initialState, action) {\n  switch (action.type) {\n    case 'select_disp': return { ...state, list: [...state.list.map((el) => { if (el.Number === action.payload) { return { ...el, selected: true } } else { return el } })] }\n    case 'set_list_storage': return { ...state, list: action.payload }\n    case 'set_search_storagre': return { ...state, search: action.payload }\n    case 'set_active_storage': return { ...state, active: action.payload }\n    default: return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}