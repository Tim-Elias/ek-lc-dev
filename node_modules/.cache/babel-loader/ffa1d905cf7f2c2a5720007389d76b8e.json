{"ast":null,"code":"import axios from 'axios/index';\n\nconst get_data = (url, data) => {\n  return new Promise((resolve, reject) => {\n    axios.post(`https://kinetika-server.tw1.su/http/hs/agent/${url}/post`, JSON.stringify(data), {\n      headers: {\n        'Content-Type': 'text/plain'\n      }\n    }).then(result => {\n      // console.log(result)\n      if (result.data.status === 'error') {\n        reject(result.data.data);\n      } else if (result.data.status === 'ok') {\n        resolve(result.data.data);\n      } else {\n        reject(result.data);\n      }\n    }).catch(error => {\n      console.log(error);\n      reject(error.response);\n    });\n  });\n};\n\nconst dateToString = date => {\n  let day = date.getDate();\n\n  if (day < 10) {\n    day = '0' + day;\n  }\n\n  let mm = date.getMonth() + 1;\n\n  if (mm < 10) {\n    mm = '0' + mm;\n  }\n\n  ;\n  return `${day}-${mm}-${date.getFullYear()}`;\n};\n\nconst saveAs = (blob, fileName) => {\n  var url = window.URL.createObjectURL(blob);\n  var anchorElem = document.createElement(\"a\");\n  anchorElem.style = \"display: none\";\n  anchorElem.href = url;\n  anchorElem.download = fileName;\n  document.body.appendChild(anchorElem);\n  anchorElem.click();\n  document.body.removeChild(anchorElem); // On Edge, revokeObjectURL should be called only after\n  // a.click() has completed, atleast on EdgeHTML 15.15048\n\n  setTimeout(function () {\n    window.URL.revokeObjectURL(url);\n  }, 1000);\n};\n\nconst get_file = (userkey, file_type, file_num, filename) => {\n  const data = {\n    userkey: userkey,\n    filetype: file_type,\n    filenum: file_num\n  };\n  get_data('getfile', data).then(result => {\n    var byteCharacters = atob(result);\n    var byteNumbers = new Array(byteCharacters.length);\n\n    for (var i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n\n    var byteArray = new Uint8Array(byteNumbers); // now that we have the byte array, construct the blob from it\n\n    var blob1 = new Blob([byteArray], {\n      type: \"application/octet-stream\"\n    });\n    var fileName1 = filename;\n    saveAs(blob1, fileName1);\n  }, err => {\n    console.log(\"err\");\n    console.log(err);\n  });\n};\n\nexport { get_data, dateToString, get_file };","map":{"version":3,"sources":["/home/saint/ek 3.1/ek-lc-dev/src/common/common_modules.js"],"names":["axios","get_data","url","data","Promise","resolve","reject","post","JSON","stringify","headers","then","result","status","catch","error","console","log","response","dateToString","date","day","getDate","mm","getMonth","getFullYear","saveAs","blob","fileName","window","URL","createObjectURL","anchorElem","document","createElement","style","href","download","body","appendChild","click","removeChild","setTimeout","revokeObjectURL","get_file","userkey","file_type","file_num","filename","filetype","filenum","byteCharacters","atob","byteNumbers","Array","length","i","charCodeAt","byteArray","Uint8Array","blob1","Blob","type","fileName1","err"],"mappings":"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","sourcesContent":["import axios from 'axios/index'\n\nconst get_data = (url, data) => {\n  return new Promise((resolve, reject) => {\n    axios.post(`https://kinetika-server.tw1.su/http/hs/agent/${url}/post`,\n      JSON.stringify(data),\n      {\n        headers: { 'Content-Type': 'text/plain' } \n      }\n\n    ).then((result) => {\n      // console.log(result)\n      if (result.data.status === 'error') {\n        reject(result.data.data)\n      } else if (result.data.status === 'ok') {\n        resolve(result.data.data)\n      } else { reject(result.data) }\n    }).catch((error) => {\n      console.log(error)\n      reject(error.response)\n    })\n  })\n}\n\nconst dateToString = (date) => {\n  let day = date.getDate()\n  if (day < 10) { day = '0' + day }\n  let mm = date.getMonth() + 1\n  if (mm < 10) { mm = '0' + mm };\n  return (`${day}-${mm}-${date.getFullYear()}`)\n}\n\nconst saveAs = (blob, fileName) => {\n  var url = window.URL.createObjectURL(blob);\n\n  var anchorElem = document.createElement(\"a\");\n  anchorElem.style = \"display: none\";\n  anchorElem.href = url;\n  anchorElem.download = fileName;\n\n  document.body.appendChild(anchorElem);\n  anchorElem.click();\n\n  document.body.removeChild(anchorElem);\n\n  // On Edge, revokeObjectURL should be called only after\n  // a.click() has completed, atleast on EdgeHTML 15.15048\n  setTimeout(function() {\n      window.URL.revokeObjectURL(url);\n  }, 1000);\n}\n\nconst get_file = (userkey,file_type,file_num,filename) => {\n  \n  const data = {\n    userkey: userkey,\n    filetype: file_type,\n    filenum: file_num\n  }\n  get_data('getfile',data).then(\n    (result) => {\n      \n      var byteCharacters = atob(result)\n      var byteNumbers = new Array(byteCharacters.length);\n      for (var i = 0; i < byteCharacters.length; i++) {\n          byteNumbers[i] = byteCharacters.charCodeAt(i);\n      }\n      var byteArray = new Uint8Array(byteNumbers);\n      \n      // now that we have the byte array, construct the blob from it\n      var blob1 = new Blob([byteArray], {type: \"application/octet-stream\"});\n  \n      var fileName1 = filename;\n      saveAs(blob1, fileName1);\n    },\n    (err) => { \n        console.log(\"err\")  \n        console.log(err) \n    }\n);\n}\n\nexport { get_data, dateToString, get_file }\n"]},"metadata":{},"sourceType":"module"}