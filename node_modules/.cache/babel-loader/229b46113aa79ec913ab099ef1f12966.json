{"ast":null,"code":"var _jsxFileName = \"/home/saint/123/ek-lc-dev/src/m_screen/scanner.js\";\nimport React, { Component } from 'react'; // import QrReader from 'react-qr-reader';\n\nimport { connect } from 'react-redux';\n\nclass Test extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleScan = data => {\n      if (data) {\n        this.setState({\n          result: data\n        });\n      }\n    };\n\n    this.handleError = err => {\n      console.error(err);\n    };\n\n    this.state = {\n      result: 'No result'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"wqeqweqwe\");\n  }\n\n}\n\nexport default connect(state => ({\n  store: state\n}), dispatch => ({}))(Screen);","map":{"version":3,"sources":["/home/saint/123/ek-lc-dev/src/m_screen/scanner.js"],"names":["React","Component","connect","Test","constructor","props","context","handleScan","data","setState","result","handleError","err","console","error","state","render","store","dispatch","Screen"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AACzBG,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AACxB,UAAMD,KAAN,EAAaC,OAAb;;AADwB,SAS5BC,UAT4B,GASfC,IAAI,IAAI;AACjB,UAAIA,IAAJ,EAAU;AACN,aAAKC,QAAL,CAAc;AACVC,UAAAA,MAAM,EAAEF;AADE,SAAd;AAGH;AACJ,KAf2B;;AAAA,SAgB5BG,WAhB4B,GAgBdC,GAAG,IAAI;AACjBC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,KAlB2B;;AAGxB,SAAKG,KAAL,GAAa;AACTL,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH;;AAcDM,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ;AAYH;;AAlCwB;;AAsC7B,eAAed,OAAO,CACjBa,KAAD,KAAY;AAAEE,EAAAA,KAAK,EAAEF;AAAT,CAAZ,CADkB,EAElBG,QAAQ,KAAK,EAAL,CAFU,CAAP,CAKbC,MALa,CAAf","sourcesContent":["import React, { Component } from 'react';\n// import QrReader from 'react-qr-reader';\nimport { connect } from 'react-redux';\n\nclass Test extends Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            result: 'No result'\n        }\n    }\n    \n\n    handleScan = data => {\n        if (data) {\n            this.setState({\n                result: data\n            })\n        }\n    }\n    handleError = err => {\n        console.error(err)\n    }\n\n    render() {\n        return (\n            <div>\n                wqeqweqwe\n                {/* <QrReader\n                    delay={300}\n                    onError={this.handleError}\n                    onScan={this.handleScan}\n                    style={{ width: '100%' }}\n                />\n                <p>{this.state.result}</p> */}\n            </div>\n        )\n    }\n}\n\n\nexport default connect(\n    (state) => ({ store: state }),\n    dispatch => ({\n        \n    })\n)(Screen);"]},"metadata":{},"sourceType":"module"}