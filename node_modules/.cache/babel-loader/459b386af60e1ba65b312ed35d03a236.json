{"ast":null,"code":"const today = new Date();\nlet mm = today.getMonth() + 1; // getMonth() is zero-based\n\nlet dd = today.getDate();\nconst y = today.getFullYear();\n\nif (mm < 10) {\n  mm = '0' + mm;\n}\n\nif (dd < 10) {\n  dd = '0' + dd;\n}\n\nconst date = y + '-' + mm + '-' + dd;\nconst initialState = {\n  date_start: date,\n  date_end: date,\n  balance: '',\n  balance_start: '',\n  balance_end: '',\n  disp_list: [],\n  select_print_disp: '',\n  profit: '',\n  profit_for_period: ''\n};\nexport default function dispatch(state = initialState, action) {\n  switch (action.type) {\n    case 'set_select_print_disp':\n      return { ...state,\n        select_print_disp: action.payload\n      };\n\n    case 'set_date_start':\n      return { ...state,\n        date_start: action.payload\n      };\n\n    case 'set_date_end':\n      return { ...state,\n        date_end: action.payload\n      };\n\n    case 'set_balance':\n      return { ...state,\n        balance: action.payload\n      };\n\n    case 'set_balance_start':\n      return { ...state,\n        balance_start: action.payload\n      };\n\n    case 'set_balance_end':\n      return { ...state,\n        balance_end: action.payload\n      };\n\n    case 'set_profit':\n      return { ...state,\n        profit: action.payload\n      };\n\n    case 'set_profit_for_period':\n      return { ...state,\n        profit_for_period: action.payload\n      };\n\n    case 'set_disp_list':\n      return { ...state,\n        disp_list: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/saint/ek 3.1/ek-lc-dev/src/reducers/movement.js"],"names":["today","Date","mm","getMonth","dd","getDate","y","getFullYear","date","initialState","date_start","date_end","balance","balance_start","balance_end","disp_list","select_print_disp","profit","profit_for_period","dispatch","state","action","type","payload"],"mappings":"AAAA,MAAMA,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,IAAIC,EAAE,GAAGF,KAAK,CAACG,QAAN,KAAmB,CAA5B,C,CAA+B;;AAC/B,IAAIC,EAAE,GAAGJ,KAAK,CAACK,OAAN,EAAT;AAEA,MAAMC,CAAC,GAAGN,KAAK,CAACO,WAAN,EAAV;;AAEA,IAAIL,EAAE,GAAG,EAAT,EAAa;AAAEA,EAAAA,EAAE,GAAG,MAAMA,EAAX;AAAe;;AAC9B,IAAIE,EAAE,GAAG,EAAT,EAAa;AAAEA,EAAAA,EAAE,GAAG,MAAMA,EAAX;AAAe;;AAE9B,MAAMI,IAAI,GAAGF,CAAC,GAAG,GAAJ,GAAUJ,EAAV,GAAe,GAAf,GAAqBE,EAAlC;AAEA,MAAMK,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAEF,IADK;AAEjBG,EAAAA,QAAQ,EAAEH,IAFO;AAIjBI,EAAAA,OAAO,EAAE,EAJQ;AAKjBC,EAAAA,aAAa,EAAE,EALE;AAMjBC,EAAAA,WAAW,EAAE,EANI;AAQjBC,EAAAA,SAAS,EAAE,EARM;AASjBC,EAAAA,iBAAiB,EAAE,EATF;AAWjBC,EAAAA,MAAM,EAAE,EAXS;AAYjBC,EAAAA,iBAAiB,EAAE;AAZF,CAArB;AAeA,eAAe,SAASC,QAAT,CAAkBC,KAAK,GAAGX,YAA1B,EAAwCY,MAAxC,EAAgD;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,uBAAL;AAA8B,aAAO,EAAE,GAAGF,KAAL;AAAYJ,QAAAA,iBAAiB,EAAEK,MAAM,CAACE;AAAtC,OAAP;;AAC9B,SAAK,gBAAL;AAAuB,aAAO,EAAE,GAAGH,KAAL;AAAYV,QAAAA,UAAU,EAAEW,MAAM,CAACE;AAA/B,OAAP;;AACvB,SAAK,cAAL;AAAqB,aAAO,EAAE,GAAGH,KAAL;AAAYT,QAAAA,QAAQ,EAAEU,MAAM,CAACE;AAA7B,OAAP;;AACrB,SAAK,aAAL;AAAoB,aAAO,EAAE,GAAGH,KAAL;AAAYR,QAAAA,OAAO,EAAES,MAAM,CAACE;AAA5B,OAAP;;AACpB,SAAK,mBAAL;AAA0B,aAAO,EAAE,GAAGH,KAAL;AAAYP,QAAAA,aAAa,EAAEQ,MAAM,CAACE;AAAlC,OAAP;;AAC1B,SAAK,iBAAL;AAAwB,aAAO,EAAE,GAAGH,KAAL;AAAYN,QAAAA,WAAW,EAAEO,MAAM,CAACE;AAAhC,OAAP;;AACxB,SAAK,YAAL;AAAmB,aAAO,EAAE,GAAGH,KAAL;AAAYH,QAAAA,MAAM,EAAEI,MAAM,CAACE;AAA3B,OAAP;;AACnB,SAAK,uBAAL;AAA8B,aAAO,EAAE,GAAGH,KAAL;AAAYF,QAAAA,iBAAiB,EAAEG,MAAM,CAACE;AAAtC,OAAP;;AAC9B,SAAK,eAAL;AAAsB,aAAO,EAAE,GAAGH,KAAL;AAAYL,QAAAA,SAAS,EAAEM,MAAM,CAACE;AAA9B,OAAP;;AAEtB;AAAS,aAAOH,KAAP;AAXb;AAaH","sourcesContent":["const today = new Date()\nlet mm = today.getMonth() + 1; // getMonth() is zero-based\nlet dd = today.getDate();\n\nconst y = today.getFullYear();\n\nif (mm < 10) { mm = '0' + mm }\nif (dd < 10) { dd = '0' + dd }\n\nconst date = y + '-' + mm + '-' + dd;\n\nconst initialState = {\n    date_start: date,\n    date_end: date,\n\n    balance: '',\n    balance_start: '',\n    balance_end: '',\n\n    disp_list: [],\n    select_print_disp: '',\n\n    profit: '',\n    profit_for_period: '',\n}\n\nexport default function dispatch(state = initialState, action) {\n    switch (action.type) {\n        case 'set_select_print_disp': return { ...state, select_print_disp: action.payload }\n        case 'set_date_start': return { ...state, date_start: action.payload }\n        case 'set_date_end': return { ...state, date_end: action.payload }\n        case 'set_balance': return { ...state, balance: action.payload }\n        case 'set_balance_start': return { ...state, balance_start: action.payload }\n        case 'set_balance_end': return { ...state, balance_end: action.payload }\n        case 'set_profit': return { ...state, profit: action.payload }\n        case 'set_profit_for_period': return { ...state, profit_for_period: action.payload }\n        case 'set_disp_list': return { ...state, disp_list: action.payload }\n\n        default: return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}